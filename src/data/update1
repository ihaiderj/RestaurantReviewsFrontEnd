import wixData from 'wix-data';
import wixlocation from "wix-location";
import { currentMember } from "wix-members-frontend";
import wixLocationFrontend from "wix-location-frontend";
import { myUpdateFileDescriptorFunction } from "backend/update-file.web";
import { deleteUnusedFiles } from 'backend/managemedia.web.js';
import { fetch } from "wix-fetch";
import { session } from 'wix-storage';


let selectedImageIndex;
let galleryItems = [];
let deletedFile = [];

let savedModel
let savedBrand
let comfortPromises = []



$w.onReady(function async () {

     if (session.getItem('loaderActive') === 'true') {
        $w('#loader').hide(); 
        session.removeItem('loaderActive'); // Clear the session flag
    }

    const query = wixlocation.query;
    var productID = query.productID;

    //    wixLocationFrontend.onChange((location) => {
    //     let newPath = location.path;
    //     wixlocation.to(wixlocation.url);

    // });

    
    const options = {
        fieldsets: ['FULL']
    }
    currentMember.getMember(options)
        .then(async (member) => {

            const id = member._id;
            const memberEmail = member.loginEmail;

            await fillForm()

            async function fillForm(params) {

                wixData.query('SpaceCapsuleFeatures')
                .eq('_id', productID)
                .find()
                .then(async(results) => {

                    $w('#updateMainCIBrandC1').value = await results.items[0].name   
                   
                    savedBrand = await results.items[0].name
                    $w('#updateMainCIModelC1').value = await results.items[0].model
                    savedModel = await results.items[0].model

                    
                    $w('#updateMainCIRetailPC1').value = results.items[0].recommendedRetailPrice
                    $w('#updateMainCILengthC1').value = results.items[0].length
                    $w('#updateMainCIHeightC1').value = results.items[0].heightM
                    $w('#updateMainCIWidthC1').value = results.items[0].widthM
                    $w('#updateMainCIFloorAC1').value = results.items[0].floorAreaM2
                    $w('#updateMainCIWeightC1').value = results.items[0].weightTon
                    $w('#mainCIStructuralDTC1').value = results.items[0].structuralDelivery
                    if (results.items[0].capsuleType === 'Space Capsule') {
                        $w('#updateMainCICapsuleTSpaceC').checked = true
                        $w('#updateMainCICapsuleTAppleC').checked = false
                    } else {
                        $w('#updateMainCICapsuleTAppleC').checked = true
                        $w('#updateMainCICapsuleTSpaceC').checked = false
                    }
                    if (results.items[0].image) {
                        $w('#mainCapsuleImage').src = results.items[0].image
                        $w('#mainCapsuleImage').show()
                    }

                    fillCLayout('separatedBedroomArea', $w('#updateCapsuleLseparatedBANo'));
                    fillCLayout('builtinWardrobes1', $w('#updateCapsuleLBuiltIWNo'));
                    fillCLayout('bathroom', $w('#updateCapsuleLBathroomNo'));
                    fillCLayout('kitchen', $w('#updateCapsuleLKitchenNo'));
                    fillCLayout('barStorage', $w('#updateCapsuleLEntranceBSNo'));
                    fillCLayout('customLayoutAvailable', $w('#updateCapsuleLCustomLANo'));

                    if (results.items[0].balcony === 'Yes') {
                        $w('#updateCapsuleLBalconyNo').checked = false
                        $w('#updateCapsuleLBalconyYes').checked = true
                        $w('#updateCapsuleLBalconyOp').checked = false
                    } else if (results.items[0].balcony === 'Optional') {
                        $w('#updateCapsuleLBalconyOp').checked = true
                        $w('#updateCapsuleLBalconyYes').checked = false
                        $w('#updateCapsuleLBalconyNo').checked = false
                    } else {
                        $w('#updateCapsuleLBalconyNo').checked = true
                    }
                    if (results.items[0].singleMultiLevel) {
                        $w('#updateCapsuleLSingleMLC1').value = results.items[0].singleMultiLevel
                    }

                    const test = $w('#updateComfortAirCC4')
                   

                    fillC1C2C3($w('#updateComfortAirCNo'), 'airConditioning', 'airConditioningImage');
                    fillC1C2C3($w('#updateComfortHeatingNo'), 'text', 'heatingImage');
                    fillC1C2C3($w('#updateComfortFreshASNo'), 'freshAirSystem', 'freshAirSystemImage');
                    fillonlyC2($w('#updateComfortFloorHNo'), 'floorHeating', 'floorHeatingImage');
                    fillonlyC2($w('#updateComfortWaterFSNo'), 'waterFiltrationSystem', 'waterFiltrationSystemImage');
                    fillC1C2C3($w('#updateComfortBlockoutBNo'), 'blockoutBlinds', 'blockoutBlindsImage');
                    fillC1C2C3($w('#updateComfortSlightNo'), 'skylight', 'skylightImage');
                    fillC1C2C3($w('#updateComfortSkylightBNo'), 'skylightBlind', 'skylightBlindImage');
                    fillC1C2C3($w('#updateComfortOtherNo'), 'otherComfort', 'otherComfortImage');

                    fillonlyC2($w('#updateEntertainmentProjectorNo'), 'projector', 'projectorImage');
                    fillC1C2C3($w('#updateEntertainmentPSNo'), 'projectorScreen', 'projectorScreenImage');
                    fillC1C2C3($w('#updateEntertainmentIntelligentCPNo'), 'intelligentControlPanel', 'intelligentControlPanelImage');
                    fillC1C2C3($w('#updateEntertainmentIntegratedSSNo'), 'integratedSoundSystem', 'integratedSoundSystemImage');
                    fillC1C2C3($w('#updateEntertainmentOtherNo'), 'otherEntertainment', 'otherEntertainmentImage');

                    fillC1C2C3($w('#updateKitchenKitchenSNo'), 'kitchenSink', 'kitchenSinkImage');
                    fillC1C2C3($w('#updateKitchenKitchenBDNo'), 'kitchenBenchType', 'kitchenBenchDesignImage');
                    fillC1C2C3($w('#updateKitchenBenchtopMNo'), 'benchtopMaterial', 'benchtopMaterialImage');
                    fillC1C2C3($w('#updateKitchenKitchenTCNo'), 'tapware', 'tapwareColourImage');
                    fillC1C2C3($w('#updateKitchenTapwareFNo'), 'tapwareFunctionality', 'tapwareFunctionalityImage');
                    fillonlyC2($w('#updateKitchenCupboardsNo'), 'cupboards', 'cupboardsImage');
                    fillonlyC2($w('#updateKitchenDrinkingWFNo'), 'filteredWater', 'drinkingWaterFiltrationSystemImage');
                    fillC1C2C3($w('#updateKitchenOtherNo'), 'otherKitchen', 'otherKitchenImage');

                    fillC1C2C3($w('#updateAppliancesHotWSNo'), 'hotWaterServiceIncluded', 'hotWaterServicesImage');
                    fillonlyC2($w('#updateAppliancesRangehoodINo'), 'rangehood', 'rangehoodIncludedImage');
                    fillonlyC2($w('#updateAppliancesOvenINo'), 'oven', 'ovenIncludedImage');
                    fillonlyC2($w('#updateAppliancesMicrowaveINo'), 'microwave', 'microwaveImage');
                    fillonlyC2($w('#updateAppliancesFridgeINo'), 'fridge', 'fridgeImage');
                    fillonlyC2($w('#updateAppliancesCooktopINo'), 'cooktop', 'cooktopImage');
                    fillonlyC2($w('#updateAppliancesDishwasherINo'), 'dishwasherIncluded', 'dishwasherImage');
                    fillC1C2C3($w('#updateAppliancesOtherNo'), 'otherElectricalAppliances', 'otherElectricalAppliancesImage');

                    fillC1C2C3($w('#updateBathroomToiletNo'), 'toilet', 'toiletImage');
                    fillC1C2C3($w('#updateBathroomMirrorNo'), 'bathroomMirror', 'mirrorImage');
                    fillC1C2C3($w('#updateBathroomShowerNo'), 'shower', 'showerImage');
                    fillC1C2C3($w('#updateBathroomVanityBNo'), 'vanityBasin', 'vanityBasinImage');
                    fillC1C2C3($w('#updateBathroomBathroomTCNo'), 'tapwareColour', 'tapwareColourImage1');
                    fillC1C2C3($w('#updateBathroomBathroomBMNo'), 'bathroomBenchMaterial', 'bathroomBenchMaterialImage');
                    fillC1C2C3($w('#updateBathroomTowelRNo'), 'hotTowelRail', 'towelRailImage');
                    fillC1C2C3($w('#updateBathroomExhaustFNo'), 'exhaustFan', 'exhaustFanImage');
                    fillC1C2C3($w('#updateBathroomOtherNo'), 'otherBathroom', 'otherBathroomImage');

                    if (results.items[0].bedroomSpaces != undefined) {
                        $w('#updateBedroomBedroomSC1').value = results.items[0].bedroomSpaces
                    }
                    fillonlyC2($w('#updateBedroomBedroomBIWNo'), 'builtinWardrobes', 'builtinWardrobesImage');
                    fillC1C2C3($w('#updateBedroomBedroomACNo'), 'bedroomAirConditioningHeating', 'bedroomAirConditioningImage');
                    fillC1C2C3($w('#updateBedroomBedroomHNo'), 'heating', 'heatingImage1');
                    fillC1C2C3($w('#updateBedroomBedroomFASNo'), 'freshAirSystem1', 'freshAirSystemImage1');
                    fillonlyC2($w('#updateBedroomBedroomFHNo'), 'floorHeating1', 'floorHeatingImage1');
                    fillC1C2C3($w('#updateBedroomLightingCNo'), 'lightingControls', 'lightingControlsImage');
                    fillonlyC2($w('#updateBedroomBedsideLNo'), 'bedLights', 'bedsideLightingImage');
                    fillonlyC2($w('#updateBedroomBedroomSRNo'), 'bedroomSunRoof', 'bedroomSunRoofImage');
                    fillC1C2C3($w('#updateBedroomBedroomBBNo'), 'blockoutBlinds1', 'blockoutBlindsImage1');
                    fillC1C2C3($w('#updateBedroomOtherNo'), 'otherBedroom', 'otherBedroomImage');

                    fillC1C2C3($w('#updateAccessSSSmartLNo'), 'meetsAustralianStandards11', 'smartLockMainEntranceImage');
                    fillonlyC2($w('#updateAccessSSAdditionalLNo'), 'meetsAustralianStandards111', 'additionalLocksImage');
                    fillonlyC2($w('#updateAccessSSWindowSSNo'), 'meetsAustralianStandards12', 'windowSecurityScreensImage');
                    fillonlyC2($w('#updateAccessSSWindowSBNo'), 'disabilityComplied', 'windowSecurityBarsImage');
                    fillonlyC2($w('#updateAccessSSSecurityASNo'), 'solarReady', 'securityAlarmSystemImage');
                    fillonlyC2($w('#updateAccessSSSmokeANo'), 'countryOfOrigin', 'smokeAlarmsImage');
                    fillonlyC2($w('#updateAccessSSFireENo'), 'capacity', 'fireExtinguisherImage');
                    fillonlyC2($w('#updateAccessSSESNo'), 'entryRampStairsIncluded', 'entranceStairsImage');
                    fillonlyC2($w('#updateAccessSSEntranceRNo'), 'entranceRamp', 'entranceRampImage');
                    fillonlyC2($w('#updateAccessSSEntranceSRNo'), 'entranceSafetyRail', 'entranceSafetyRailImage');
                    fillC1C2C3($w('#updateAccessSSOtherNo'), 'otherSecuritySafety', 'otherAccessSafetySecurityImage');

                    fillC1C2C3($w('#updateExteriorExteriorCONo'), 'exteriorColourOptions', 'exteriorColourOptionsImage');
                    fillC1C2C3($w('#updateExteriorAluminiumTNo'), 'aluminiumTreatment1', 'antiInsectTreatmentImage');
                    fillC1C2C3($w('#updateExteriorPaintPNo'), 'paintProtection', 'aluminiumTreatmentImage');
                    fillC1C2C3($w('#updateExteriorAntiITNo'), 'antiInsectTreatment', 'paintProtectionImage');
                    fillC1C2C3($w('#updateExteriorTermitePNo'), 'termiteProtection', 'termiteProtectionImage');
                    fillonlyC2($w('#updateExteriorRainwaterGNo'), 'rainwaterGuttering', 'rainwaterGutteringImage');
                    fillC1C2C3($w('#updateExteriorOtherNo'), 'otherExterior', 'otherExteriorImage');

                    fillC1C2C3($w('#updateExteriorLLEDWSLNo'), 'ledWindowStripLights', 'ledWindowStripLightsImage');
                    fillC1C2C3($w('#updateExteriorLFeatureWLNo'), 'featureWallLight', 'featureWallLightsImage');
                    fillC1C2C3($w('#updateExteriorLMainDLNo'), 'mainDoorLights', 'mainDoorLightsImage');
                    fillC1C2C3($w('#updateExteriorLBalconyLNo'), 'balconyLights', 'balconyLightsImage');
                    fillC1C2C3($w('#updateExteriorLExternalFLNo'), 'externalFloorLights', 'externalFloorLightsImage');
                    fillC1C2C3($w('#updateExteriorLOtherNo'), 'otherExteriorLighting', 'otherExteriorLightingImage');

                    fillC1C2C3($w('#updateInteriorLInteriorLSMNo'), 'interiorLedSmartLights', 'interiorLedSmartLightsImage');
                    fillC1C2C3($w('#updateInteriorLInteriorALSNo'), 'interiorAmbientLightSystem', 'interiorAmbientLightSystemImage');
                    fillC1C2C3($w('#updateInteriorLInteriorILSNo'), 'interiorInternalRgbLightSystem', 'interiorInternalLightSystemImage');
                    fillC1C2C3($w('#updateInteriorLInteriorLBNo'), 'interiorLightBelt', 'interiorLightBeltImage');
                    fillC1C2C3($w('#updateInteriorLInteriorCSLNo'), 'interiorCeilingStripLights', 'interiorCeilingStripLights1');
                    fillC1C2C3($w('#updateInteriorLInteriorFSLNo'), 'interiorFloorStripLights', 'interiorFloorStripLightsImage');
                    fillC1C2C3($w('#updateInteriorLInteriorFWLNo'), 'exteriorFeatureWallLights', 'interiorFeatureWallLightsImage');
                    fillC1C2C3($w('#updateInteriorLOtherNo'), 'otherInteriorLighting', 'otherInteriorLightingImage');

                    fillC1C2C3($w('#updateBuildingMAluminiumTNo'), 'electricalSpecification', 'aluminiumTypeImage');
                    fillC1C2C3($w('#updateBuildingMFloorFNo'), 'powerOutletsGpo', 'floorFurnishingImage');
                    fillC1C2C3($w('#updateBuildingMInsulationTNo'), 'floors', 'insulationTypeImage');
                    fillC1C2C3($w('#updateBuildingMGlassNo'), 'insulationType', 'glassImage');
                    fillC1C2C3($w('#updateBuildingMPrivacyGNo'), 'privacyGlass', 'privacyGlassImage');
                    fillonlyC2($w('#updateBuildingMWaterPANo'), 'waterPipeAntiFreeze', 'waterPipeAntifreezeImage');
                    fillC1C2C3($w('#updateBuildingMOtherNo'), 'glass', 'otherBuildingMaterialsImage');
                    
                    fillC1C2C3($w('#updateEngineeringSFrameANo'), 'aluminiumTreatment', 'frameAssemblyImage');
                    fillC1C2C3($w('#updateEngineeringSFoundationsFSNo'), 'meetsAustralianStandards', 'foundationsFeetStandsImage');
                    fillonlyC2($w('#updateEngineeringSAdjustableFSNo'), 'adjustableFeetStands', 'adjustableFeetStandsImage');
                    fillonlyC2($w('#updateEngineeringSAttachableWSNo'), 'attachableWheelStands', 'attachableWheelStandsImage');
                    fillC1C2C3($w('#updateEngineeringSOtherNo'), 'otherEngineeringStandards', 'otherEngineeringStandardsImage');
                    
                    fillC1C2C3($w('#updateElectricalSElectricalPSONo'), 'electricalPowerSupplyOptions', 'electricalPowerSupplyOptionsImage');
                    fillC1C2C3($w('#updateElectricalSInternationalPONo'), 'internationalPowerOutlets', 'internationalPowerOutletsImage');
                    fillC1C2C3($w('#updateElectricalSIntegratedDCNo'), 'integratedDeviceCharging', 'integratedDeviceChargingImage');
                    if(results.items[0].otherElectricalSpecifications != undefined){
                            $w('#updateElectricalSPowerCC1').value = results.items[0].otherElectricalSpecifications
                            $w('#updateElectricalSPowerCC1').show()

                            $w('#updateElectricalSPowerCYes').checked = true
                            $w('#updateElectricalSPowerCNo').checked = false
                          
                    } else {
                            
                            $w('#updateElectricalSPowerCC1').hide()
                            $w('#updateElectricalSPowerCYes').checked = false
                            $w('#updateElectricalSPowerCNo').checked = true
                    }
                    
                    fillC1C2C3($w('#updateEnergyEHotWRNo'), 'hotWaterRating', 'hotWaterRatingImage');
                    fillC1C2C3($w('#updateEnergyEExhaustFRNo'), 'exhaustFanRating', 'exhaustFanRatingImage');
                    fillC1C2C3($w('#updateEnergyEAirCRNo'), 'airConditioningRating', 'airConditioningRatingImage');
                    fillC1C2C3($w('#updateEnergyEFreshASRNo'), 'freshAirSystemRating', 'freshAirSystemRatingImage');
                    fillC1C2C3($w('#updateEnergyEHeaterRNo'), 'heaterRating', 'heaterRatingImage');
                    fillC1C2C3($w('#updateEnergyEFloorHRNo'), 'floorHeatingRating', 'floorHeatingRating1');
                    fillC1C2C3($w('#updateEnergyERangehoodRNo'), 'rangehoodRating', 'rangehoodRating1');
                    fillC1C2C3($w('#updateEnergyEOvenRNo'), 'ovenEnergyRating', 'ovenRatingImage1');
                    fillC1C2C3($w('#updateEnergyEMicrowaveRNo'), 'microwaveEnergyRating', 'fridgeRatingImage');
                    fillC1C2C3($w('#updateEnergyEFridgeRNo'), 'fridgeEnergyRating', 'microwaveRatingImage');
                    fillC1C2C3($w('#updateEnergyECooktopRNo'), 'cooktopEnergyRating', 'cooktopRatingImage');
                    fillC1C2C3($w('#updateEnergyEDishwasherRNo'), 'dishwasherEnergyRating', 'dishwasherRatingImage');
                    
                    fillC1C2C3($w('#updateSolarISolarPNo'), 'solarPanels', 'solarPanelsImage');
                    fillonlyC2($w('#updateSolarIInverterNo'), 'inverter', 'inverterImage');
                    if(results.items[0].inverterType != undefined){
                            $w('#updateSolarIInverterTC1').value = results.items[0].inverterType
                            $w('#updateSolarIInverterTC1').show()
                            $w('#updateSolarIInverterTYes').checked = true
                            $w('#updateSolarIInverterTNo').checked = false
                          
                    } else {                            
                            $w('#updateSolarIInverterTC1').hide()
                            $w('#updateSolarIInverterTYes').checked = false
                            $w('#updateSolarIInverterTNo').checked = true
                    }
                    fillC1C2C3($w('#updateSolarIBatterySNo'), 'batterySupplied', 'batterySuppliedImage');                    
                    fillC1C2C3($w('#updateSolarIOtherNo'), 'otherSolarInclusions1', 'otherSolarInclusionsImage');
                    
                    fillC1C2C3($w('#updateNaturalGOGasONo'), 'gasOptions', 'gasOptionsImage');
                    
                    fillC1C2C3($w('#updateBuildingCCAustralianSNo'), 'smokeAlarms', 'australianStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCNewZSNo'), 'smartKeyOptionHotelUse', 'newZealandStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCEuropeanSNo'), 'washingMachineIncluded', 'europeanStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCChineseSNo'), 'exteriorWindowFrameLights', 'chineseStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCAmericanSNo'), 'entrySafetyRailing', 'americanStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCCanadianSNo'), 'colourOptions', 'canadianStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCJapaneseSNo'), 'foundationsStandsFeet', 'japaneseStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCAfricanSNo'), 'frameType', 'africanStandardsImage');
                    fillC1C2C3($w('#updateBuildingCCOtherNo'), 'frameAssembly', 'otherBuildingComplianceStandards'); 
                    
                    fillC1C2C3($w('#updateInternationalBCCCeSNo'), 'ce', 'ceStandardsImage'); 
                    fillC1C2C3($w('#updateInternationalBCCIsoSNo'), 'iso', 'isoStandardsImage'); 
                    fillC1C2C3($w('#updateInternationalBCCCycloneRNo'), 'cycloneRated', 'cycloneRatingStandards'); 
                    fillC1C2C3($w('#updateInternationalBCCPlumbingCNo'), 'plumbingCertification', 'plumbingCertificationImage'); 
                    fillC1C2C3($w('#updateInternationalBCCElectricalCNo'), 'electricalCertification', 'electricalCertificationImage'); 
                    fillC1C2C3($w('#updateInternationalBCCGlassCNo'), 'glassCompliance', 'glassComplianceImage'); 
                    fillC1C2C3($w('#updateInternationalBCCFireCNo'), 'fireResistance', 'fireComplianceImage'); 
                    fillC1C2C3($w('#updateInternationalBCCDisabilityCNo'), 'disabilityCompliance', 'disabilityComplianceImage'); 
                    fillC1C2C3($w('#updateInternationalBCCWindowPTNo'), 'windPressureTested', 'windowPressureTestedImage'); 
                    fillC1C2C3($w('#updateInternationalBCCOtherNo'), 'otherInternationalCompliance', 'otherInternationalBuildingComplianceImage'); 
                    
                    fillC1C2C3forWarentees($w('#updateWarranteesStructuralWNo'), 'structuralWarrantee', 'structuralWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesTermiteWNo'), 'termiteWarrantee', 'termiteWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesWaterPWNo'), 'waterProofingWarrantee', 'waterProofingWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesElectricalWNo'), 'electricalWarrantee', 'electricalWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesPlumbingWNo'), 'plumbingWarrantee', 'plumbingWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesColorFWNo'), 'colorFadeWarrantee', 'colourFadeWarranteeImage'); 
                    fillC1C2C3forWarentees($w('#updateWarranteesOtherNo'), 'otherWarrantees', 'otherWarranteesImage'); 

                     $w('#gallery3').items = results.items[0].gallery                  

                     $w('#gallery3').items.map((file) => (galleryItems.push({
                        title: file.title,
                        src: file.src,
                        type: "image",

                    })))
                     $w('#galleryPlaceholder').src = galleryItems[0].src

                    function fillCLayout(fId, noElement) {
                        let mainString = extractBeforeSubstring(noElement.id, 'No')
                        let yesElement = $w(`#${mainString}Yes`)
                        if (results.items[0][fId] === 'Yes') {
                            yesElement.checked = true
                            noElement.checked = false
                        } else {
                            noElement.checked = true
                            yesElement.checked = false
                        }
                    }

                    function fillC1C2C3(noElement, fID, imageFID) {
                        let mainString = extractBeforeSubstring(noElement.id, 'No')
                        let yesElement = $w(`#${mainString}Yes`)
                        let c1Element = $w(`#${mainString}C1`)
                        let c5Element = $w(`#${mainString}C5`)
                        let c4Element = $w(`#${mainString}C4`)
                        
                        if (results.items[0][fID] != 'No') {
                            yesElement.checked = true
                            noElement.checked = false
                            c1Element.show();
                            c1Element.value = results.items[0][fID]
                            c5Element.show()
                            c4Element.src = results.items[0][imageFID]
                            c4Element.show();
                        }
                        if (results.items[0][fID] === undefined) {
                            yesElement.checked = false
                            noElement.checked = true
                            c1Element.hide()
                            c5Element.hide()

                        }

                    }
                    function fillC1C2C3forWarentees(noElement, fID, imageFID) {
                        let mainString = extractBeforeSubstring(noElement.id, 'No')
                        let yesElement = $w(`#${mainString}Yes`)
                        let c1Element = $w(`#${mainString}C1`)
                        let c2Element = $w(`#${mainString}C2`)
                        let c5Element = $w(`#${mainString}C5`)
                        let c4Element = $w(`#${mainString}C4`)
                        
                        if (results.items[0][fID] != 'No') {
                            yesElement.checked = true
                            noElement.checked = false
                            c1Element.show();
                            c2Element.value = results.items[0][fID]
                            c5Element.show()
                            c4Element.src = results.items[0][imageFID]
                        }
                        if (results.items[0][fID] === undefined || results.items[0][fID] === null)  {
                            yesElement.checked = false
                            noElement.checked = true
                            c1Element.hide()
                            c5Element.hide()

                        }

                    }

                    function fillonlyC2(noElement, fID, imageFID) {
                        let mainString = extractBeforeSubstring(noElement.id, 'No')
                        let yesElement = $w(`#${mainString}Yes`)
                        let c5Element = $w(`#${mainString}C5`)
                        let c4Element = $w(`#${mainString}C4`)
                       
                        if (results.items[0][fID] != 'No') {
                            yesElement.checked = true
                            noElement.checked = false
                            c5Element.show()
                            c4Element.src = results.items[0][imageFID]
                        }
                        if (results.items[0][fID] === undefined) {
                            yesElement.checked = false
                            noElement.checked = true

                            c5Element.hide()

                        }

                    }

                })
                
            }            
           
            const mainCIc1 = [$w('#updateMainCIBrandC1'), $w('#updateMainCIModelC1'), $w('#updateMainCIRetailPC1'),
                $w('#updateMainCILengthC1'), $w('#updateMainCIHeightC1'), $w('#updateMainCIWidthC1'), $w('#updateMainCIFloorAC1'),
                $w('#updateMainCIWeightC1'), $w('#mainCIStructuralDTC1')
            ]     

            const cLayoutNo = [$w('#updateCapsuleLseparatedBANo'), $w('#updateCapsuleLBuiltIWNo'), $w('#updateCapsuleLBathroomNo'),
                $w('#updateCapsuleLKitchenNo'), $w('#updateCapsuleLEntranceBSNo'), $w('#updateCapsuleLCustomLANo'),
                $w('#updateCapsuleLBalconyNo')
            ]
            const cLayoutYes = [
                $w('#updateCapsuleLseparatedBAYes'),
                $w('#updateCapsuleLBuiltIWYes'),
                $w('#updateCapsuleLBathroomYes'),
                $w('#updateCapsuleLKitchenYes'),
                $w('#updateCapsuleLEntranceBSYes'),
                $w('#updateCapsuleLCustomLAYes'),
                $w('#updateCapsuleLBalconyYes'),
            ]
            const cLayoutOptional = [$w('#updateCapsuleLBalconyOp')]

            const entertainmentPNo = [

                $w('#updateEntertainmentProjectorNo'),

                $w('#updateEntertainmentPSNo'),

                $w('#updateEntertainmentIntelligentCPNo'),

                $w('#updateEntertainmentIntegratedSSNo'),

                $w('#updateEntertainmentOtherNo'),

            ]
            const entertainmentPYes = [

                $w('#updateEntertainmentProjectorYes'),

                $w('#updateEntertainmentPSYes'),

                $w('#updateEntertainmentIntelligentCPYes'),

                $w('#updateEntertainmentIntegratedSSYes'),

                $w('#updateEntertainmentOtherYes'),

            ]
            const entertainmentc1 = [
                $w('#updateEntertainmentPSC1'),

                $w('#updateEntertainmentIntelligentCPC1'),

                $w('#updateEntertainmentIntegratedSSC1'),

                $w('#updateEntertainmentOtherC1'),

            ]
            const entertainmentc2 = [

                $w('#updateEntertainmentProjectorC5'),

                $w('#updateEntertainmentPSC5'),

                $w('#updateEntertainmentIntelligentCPC5'),

                $w('#updateEntertainmentIntegratedSSC5'),

                $w('#updateEntertainmentOtherC5'),

            ]

            const confortYeselements = [

                $w('#updateComfortAirCYes'),

                $w('#updateComfortHeatingYes'),

                $w('#updateComfortFreshASYes'),

                $w('#updateComfortFloorHYes'),

                $w('#updateComfortWaterFSYes'),

                $w('#updateComfortBlockoutBYes'),

                $w('#updateComfortSlightYes'),

                $w('#updateComfortSkylightBYes'),

                $w('#updateComfortOtherYes'),

            ]
            const confortNoelements = [

                $w('#updateComfortAirCNo'),

                $w('#updateComfortHeatingNo'),

                $w('#updateComfortFreshASNo'),

                $w('#updateComfortFloorHNo'),

                $w('#updateComfortWaterFSNo'),

                $w('#updateComfortBlockoutBNo'),

                $w('#updateComfortSlightNo'),

                $w('#updateComfortSkylightBNo'),

                $w('#updateComfortOtherNo'),

            ]
            const comfortC1 = [

                $w('#updateComfortAirCC1'),

                $w('#updateComfortHeatingC1'),

                $w('#updateComfortFreshASC1'),

                $w('#updateComfortBlockoutBC1'),

                $w('#updateComfortSlightC1'),

                $w('#updateComfortSkylightBC1'),

                $w('#updateComfortOtherC1'),

            ]
            const comfortC2 = [

                $w('#updateComfortAirCC5'),

                $w('#updateComfortHeatingC5'),

                $w('#updateComfortFreshASC5'),

                $w('#updateComfortFloorHC5'),

                $w('#updateComfortWaterFSC5'),

                $w('#updateComfortBlockoutBC5'),

                $w('#updateComfortSlightC5'),

                $w('#updateComfortSkylightBC5'),

                $w('#updateComfortOtherC5'),

            ]
            const appliancesYes = [

                $w('#updateAppliancesHotWSYes'),

                $w('#updateAppliancesRangehoodIYes'),

                $w('#updateAppliancesOvenIYes'),

                $w('#updateAppliancesMicrowaveIYes'),

                $w('#updateAppliancesFridgeIYes'),

                $w('#updateAppliancesCooktopIYes'),

                $w('#updateAppliancesDishwasherIYes'),

                $w('#updateAppliancesOtherYes'),

            ]
            const appliancesNo = [

                $w('#updateAppliancesHotWSNo'),

                $w('#updateAppliancesRangehoodINo'),

                $w('#updateAppliancesOvenINo'),

                $w('#updateAppliancesMicrowaveINo'),

                $w('#updateAppliancesFridgeINo'),

                $w('#updateAppliancesCooktopINo'),

                $w('#updateAppliancesDishwasherINo'),

                $w('#updateAppliancesOtherNo'),

            ]
            const applianceC1 = [
                $w('#updateAppliancesHotWSC1'),
                $w('#updateAppliancesOtherC1'),
            ]
            const applianceC2 = [
                $w('#updateAppliancesHotWSC5'),

                $w('#updateAppliancesRangehoodIC5'),

                $w('#updateAppliancesOvenIC5'),

                $w('#updateAppliancesMicrowaveIC5'),

                $w('#updateAppliancesFridgeIC5'),

                $w('#updateAppliancesCooktopIC5'),

                $w('#updateAppliancesDishwasherIC5'),

                $w('#updateAppliancesOtherC5'),

            ]

            const InteriorYeselements = [

                $w('#updateInteriorLInteriorLSMYes'),

                $w('#updateInteriorLInteriorALSYes'),

                $w('#updateInteriorLInteriorILSYes'),

                $w('#updateInteriorLInteriorLBYes'),

                $w('#updateInteriorLInteriorCSLYes'),

                $w('#updateInteriorLInteriorFSLYes'),

                $w('#updateInteriorLInteriorFWLYes'),

                $w('#updateInteriorLOtherYes'),

            ]
            const InteriorNoelements = [

                $w('#updateInteriorLInteriorLSMNo'),

                $w('#updateInteriorLInteriorALSNo'),

                $w('#updateInteriorLInteriorILSNo'),

                $w('#updateInteriorLInteriorLBNo'),

                $w('#updateInteriorLInteriorCSLNo'),

                $w('#updateInteriorLInteriorFSLNo'),

                $w('#updateInteriorLInteriorFWLNo'),

                $w('#updateInteriorLOtherNo'),

            ]
            const interiorC1 = [

                $w('#updateInteriorLInteriorLSMC1'),

                $w('#updateInteriorLInteriorALSC1'),

                $w('#updateInteriorLInteriorILSC1'),

                $w('#updateInteriorLInteriorLBC1'),

                $w('#updateInteriorLInteriorCSLC1'),

                $w('#updateInteriorLInteriorFSLC1'),

                $w('#updateInteriorLInteriorFWLC1'),

                $w('#updateInteriorLOtherC1'),

            ]
            const interiorC2 = [

                $w('#updateInteriorLInteriorLSMC5'),

                $w('#updateInteriorLInteriorALSC5'),

                $w('#updateInteriorLInteriorILSC5'),

                $w('#updateInteriorLInteriorLBC5'),

                $w('#updateInteriorLInteriorCSLC5'),

                $w('#updateInteriorLInteriorFSLC5'),

                $w('#updateInteriorLInteriorFWLC5'),

                $w('#updateInteriorLOtherC5'),

            ]

            const exteriorNoElements = [

                $w('#updateExteriorExteriorCOYes'),

                $w('#updateExteriorAluminiumTNo'),

                $w('#updateExteriorPaintPNo'),

                $w('#updateExteriorAntiITNo'),

                $w('#updateExteriorTermitePNo'),

                $w('#updateExteriorRainwaterGNo'),

                $w('#updateExteriorOtherNo'),

            ]
            const exteriorYesElements = [

                $w('#updateExteriorExteriorCOYes'),

                $w('#updateExteriorAluminiumTYes'),

                $w('#updateExteriorPaintPYes'),

                $w('#updateExteriorAntiITYes'),

                $w('#updateExteriorTermitePYes'),

                $w('#updateExteriorRainwaterGYes'),

                $w('#updateExteriorOtherYes'),

            ]
            const exteriorC1 = [

                $w('#updateExteriorExteriorCOC1'),

                $w('#updateExteriorAluminiumTC1'),

                $w('#updateExteriorPaintPC1'),

                $w('#updateExteriorAntiITC1'),

                $w('#updateExteriorTermitePC1'),

                $w('#updateExteriorOtherC1'),

            ]
            const exteriorC2 = [

                $w('#updateExteriorExteriorCOC5'),

                $w('#updateExteriorAluminiumTC5'),

                $w('#updateExteriorPaintPC5'),

                $w('#updateExteriorAntiITC5'),

                $w('#updateExteriorTermitePC5'),

                $w('#updateExteriorRainwaterGC5'),

                $w('#updateExteriorOtherC5'),

            ]

            // Kitchen Elementas

            const kitchenYeselements = [

                $w('#updateKitchenKitchenSYes'),

                $w('#updateKitchenKitchenBDYes'),

                $w('#updateKitchenBenchtopMYes'),

                $w('#updateKitchenKitchenTCYes'),

                $w('#updateKitchenTapwareFYes'),

                $w('#updateKitchenCupboardsYes'),

                $w('#updateKitchenDrinkingWFYes'),

                $w('#updateKitchenOtherYes'),

            ]
            const kitchenNoelements = [

                $w('#updateKitchenKitchenSNo'),

                $w('#updateKitchenKitchenBDNo'),

                $w('#updateKitchenBenchtopMNo'),

                $w('#updateKitchenKitchenTCNo'),

                $w('#updateKitchenTapwareFNo'),

                $w('#updateKitchenCupboardsNo'),

                $w('#updateKitchenDrinkingWFNo'),

                $w('#updateKitchenOtherNo'),

            ]
            const kitchenC1 = [

                $w('#updateKitchenKitchenSC1'),

                $w('#updateKitchenKitchenBDC1'),

                $w('#updateKitchenBenchtopMC1'),

                $w('#updateKitchenKitchenTCC1'),

                $w('#updateKitchenTapwareFC1'),

                $w('#updateKitchenOtherC1'),

            ]
            const kitchenC2 = [

                $w('#updateKitchenKitchenSC5'),

                $w('#updateKitchenKitchenBDC5'),

                $w('#updateKitchenBenchtopMC5'),

                $w('#updateKitchenKitchenTCC5'),

                $w('#updateKitchenTapwareFC5'),

                $w('#updateKitchenCupboardsC5'),

                $w('#updateKitchenDrinkingWFC5'),

                $w('#updateKitchenOtherC5'),

            ]

            // Bathroom Elements
            const bathroomYeselements = [

                $w('#updateBathroomToiletYes'),

                $w('#updateBathroomMirrorYes'),

                $w('#updateBathroomShowerYes'),

                $w('#updateBathroomVanityBYes'),

                $w('#updateBathroomBathroomTCYes'),

                $w('#updateBathroomBathroomBMYes'),

                $w('#updateBathroomTowelRYes'),

                $w('#updateBathroomExhaustFYes'),

                $w('#updateBathroomOtherYes'),

            ]
            const bathroomNoelements = [

                $w('#updateBathroomToiletNo'),

                $w('#updateBathroomMirrorNo'),

                $w('#updateBathroomShowerNo'),

                $w('#updateBathroomVanityBNo'),

                $w('#updateBathroomBathroomTCNo'),

                $w('#updateBathroomBathroomBMNo'),

                $w('#updateBathroomTowelRNo'),

                $w('#updateBathroomExhaustFNo'),

                $w('#updateBathroomOtherNo'),

            ]
            const bathroomC1 = [

                $w('#updateBathroomToiletC1'),

                $w('#updateBathroomMirrorC1'),

                $w('#updateBathroomShowerC1'),

                $w('#updateBathroomVanityBC1'),

                $w('#updateBathroomBathroomTCC1'),

                $w('#updateBathroomBathroomBMC1'),

                $w('#updateBathroomTowelRC1'),

                $w('#updateBathroomExhaustFC1'),

                $w('#updateBathroomOtherC1'),

            ]
            const bathroomC2 = [

                $w('#updateBathroomToiletC5'),

                $w('#updateBathroomMirrorC5'),

                $w('#updateBathroomShowerC5'),

                $w('#updateBathroomVanityBC5'),

                $w('#updateBathroomBathroomTCC5'),

                $w('#updateBathroomBathroomBMC5'),

                $w('#updateBathroomTowelRC5'),

                $w('#updateBathroomExhaustFC5'),

                $w('#updateBathroomOtherC5'),

            ]

            // Bedroom Elements

            const bedroomYeselements = [

                $w('#updateBedroomBedroomBIWYes'),

                $w('#updateBedroomBedroomACYes'),

                $w('#updateBedroomBedroomHYes'),

                $w('#updateBedroomBedroomFASYes'),

                $w('#updateBedroomBedroomFHYes'),

                $w('#updateBedroomLightingCYes'),

                $w('#updateBedroomBedsideLYes'),

                $w('#updateBedroomBedroomSRYes'),

                $w('#updateBedroomBedroomPBYes'),

                $w('#updateBedroomBedroomBBYes'),

                $w('#updateBedroomOtherYes'),

            ]
            const bedroomNoelements = [

                $w('#updateBedroomBedroomBIWNo'),

                $w('#updateBedroomBedroomACNo'),

                $w('#updateBedroomBedroomHNo'),

                $w('#updateBedroomBedroomFASNo'),

                $w('#updateBedroomBedroomFHNo'),

                $w('#updateBedroomLightingCNo'),

                $w('#updateBedroomBedsideLNo'),

                $w('#updateBedroomBedroomSRNo'),

                $w('#updateBedroomBedroomPBNo'),

                $w('#updateBedroomBedroomBBNo'),

                $w('#updateBedroomOtherNo'),

            ]
            const bedroomC1 = [

                $w('#updateBedroomBedroomSC1'),

                $w('#updateBedroomBedroomACC1'),

                $w('#updateBedroomBedroomHC1'),

                $w('#updateBedroomBedroomFASC1'),

                $w('#updateBedroomLightingCC1'),

                $w('#updateBedroomBedroomBBC1'),

                $w('#updateBedroomOtherC1'),

            ]
            const bedroomC2 = [

                $w('#updateBedroomBedroomBIWC5'),
                $w('#updateBedroomBedroomACC5'),
                $w('#updateBedroomBedroomHC5'),
                $w('#updateBedroomBedroomFASC5'),
                $w('#updateBedroomBedroomFHC5'),
                $w('#updateBedroomLightingCC5'),
                $w('#updateBedroomBedsideLC5'),
                $w('#updateBedroomBedroomSRC5'),
                // $w('#updateBedroomBedroomPBC5'),             
                $w('#updateBedroomBedroomBBC5'),
                $w('#updateBedroomOtherC5')

            ]

            // Electrical Specifications Elements

            const electricalSYeselements = [

                $w('#updateElectricalSElectricalPSOYes'),

                $w('#updateElectricalSInternationalPOYes'),

                $w('#updateElectricalSIntegratedDCYes'),

                $w('#updateElectricalSPowerCYes'),

            ]
            const electricalSNoelements = [

                $w('#updateElectricalSElectricalPSONo'),

                $w('#updateElectricalSInternationalPONo'),

                $w('#updateElectricalSIntegratedDCNo'),

                $w('#updateElectricalSPowerCNo'),

            ]
            const electricalSC1 = [

                $w('#updateElectricalSElectricalPSOC1'),

                $w('#updateElectricalSInternationalPOC1'),

                $w('#updateElectricalSIntegratedDCC1'),

                $w('#updateElectricalSPowerCC1'),

            ]
            const electricalSC2 = [

                $w('#updateElectricalSElectricalPSOC5'),

                $w('#updateElectricalSInternationalPOC5'),

                $w('#updateElectricalSIntegratedDCC5'),

            ]

            // Energy Efficiency

            const energyEffYesElements = [

                $w('#updateEnergyEHotWRYes'),

                $w('#updateEnergyEExhaustFRYes'),

                $w('#updateEnergyEAirCRYes'),

                $w('#updateEnergyEFreshASRYes'),

                $w('#updateEnergyEHeaterRYes'),

                $w('#updateEnergyEFloorHRYes'),

                $w('#updateEnergyERangehoodRYes'),

                $w('#updateEnergyEOvenRYes'),

                $w('#updateEnergyEMicrowaveRYes'),

                $w('#updateEnergyEFridgeRYes'),

                $w('#updateEnergyECooktopRYes'),

                $w('#updateEnergyEDishwasherRYes'),

            ]
            const energyEffNoElements = [

                $w('#updateEnergyEHotWRNo'),

                $w('#updateEnergyEExhaustFRNo'),

                $w('#updateEnergyEAirCRNo'),

                $w('#updateEnergyEFreshASRNo'),

                $w('#updateEnergyEHeaterRNo'),

                $w('#updateEnergyEFloorHRNo'),

                $w('#updateEnergyERangehoodRNo'),

                $w('#updateEnergyEOvenRNo'),

                $w('#updateEnergyEMicrowaveRNo'),

                $w('#updateEnergyEFridgeRNo'),

                $w('#updateEnergyECooktopRNo'),

                $w('#updateEnergyEDishwasherRNo'),

            ]

            const energyEffElementsC1 = [

                $w('#updateEnergyEHotWRC1'),

                $w('#updateEnergyEExhaustFRC1'),

                $w('#updateEnergyEAirCRC1'),

                $w('#updateEnergyEFreshASRC1'),

                $w('#updateEnergyEHeaterRC1'),

                $w('#updateEnergyEFloorHRC1'),

                $w('#updateEnergyERangehoodRC1'),

                $w('#updateEnergyEOvenRC1'),

                $w('#updateEnergyEMicrowaveRC1'),

                $w('#updateEnergyEFridgeRC1'),

                $w('#updateEnergyECooktopRC1'),

                $w('#updateEnergyEDishwasherRC1'),

            ]
            const energyEffElementsC2 = [

                $w('#updateEnergyEHotWRC5'),

                $w('#updateEnergyEExhaustFRC5'),

                $w('#updateEnergyEAirCRC5'),

                $w('#updateEnergyEFreshASRC5'),

                $w('#updateEnergyEHeaterRC5'),

                $w('#updateEnergyEFloorHRC5'),

                $w('#updateEnergyERangehoodRC5'),

                $w('#updateEnergyEOvenRC5'),

                $w('#updateEnergyEMicrowaveRC5'),

                $w('#updateEnergyEFridgeRC5'),

                $w('#updateEnergyECooktopRC5'),

                $w('#updateEnergyEDishwasherRC5'),

            ]

            // Exterior Elements

            const exteriorEYeselements = [

                $w('#updateExteriorLLEDWSLYes'),

                $w('#updateExteriorLFeatureWLYes'),

                $w('#updateExteriorLMainDLYes'),

                $w('#updateExteriorLBalconyLYes'),

                $w('#updateExteriorLExternalFLYes'),

                $w('#updateExteriorLOtherYes'),

            ]
            const exteriorENoelements = [

                $w('#updateExteriorLLEDWSLNo'),

                $w('#updateExteriorLFeatureWLNo'),

                $w('#updateExteriorLMainDLNo'),

                $w('#updateExteriorLBalconyLNo'),

                $w('#updateExteriorLExternalFLNo'),

                $w('#updateExteriorLOtherNo'),

            ]
            const exteriorEC1 = [

                $w('#updateExteriorLLEDWSLC1'),

                $w('#updateExteriorLFeatureWLC1'),

                $w('#updateExteriorLMainDLC1'),

                $w('#updateExteriorLBalconyLC1'),

                $w('#updateExteriorLExternalFLC1'),

                $w('#updateExteriorLOtherC1'),

            ]
            const exteriorEC2 = [

                $w('#updateExteriorLLEDWSLC5'),

                $w('#updateExteriorLFeatureWLC5'),

                $w('#updateExteriorLMainDLC5'),

                $w('#updateExteriorLBalconyLC5'),

                $w('#updateExteriorLExternalFLC5'),

                $w('#updateExteriorLOtherC5'),
            ]
            // International Building Compliance Certificates Elements

            const IBCCYeselements = [

                $w('#updateInternationalBCCCeSYes'),

                $w('#updateInternationalBCCIsoSYes'),

                $w('#updateInternationalBCCCycloneRYes'),

                $w('#updateInternationalBCCPlumbingCYes'),

                $w('#updateInternationalBCCElectricalCYes'),

                $w('#updateInternationalBCCGlassCYes'),

                $w('#updateInternationalBCCFireCYes'),

                $w('#updateInternationalBCCDisabilityCYes'),

                $w('#updateInternationalBCCWindowPTYes'),

                $w('#updateInternationalBCCOtherYes'),
            ]
            const IBCCNoelements = [

                $w('#updateInternationalBCCCeSNo'),

                $w('#updateInternationalBCCIsoSNo'),

                $w('#updateInternationalBCCCycloneRNo'),

                $w('#updateInternationalBCCPlumbingCNo'),

                $w('#updateInternationalBCCElectricalCNo'),

                $w('#updateInternationalBCCGlassCNo'),

                $w('#updateInternationalBCCFireCNo'),

                $w('#updateInternationalBCCDisabilityCNo'),

                $w('#updateInternationalBCCWindowPTNo'),

                $w('#updateInternationalBCCOtherNo'),
            ]

            const IBCCC1 = [

                $w('#updateInternationalBCCCeSC1'),

                $w('#updateInternationalBCCIsoSC1'),

                $w('#updateInternationalBCCCycloneRC1'),

                $w('#updateInternationalBCCPlumbingCC1'),

                $w('#updateInternationalBCCElectricalCC1'),

                $w('#updateInternationalBCCGlassCC1'),

                $w('#updateInternationalBCCFireCC1'),

                $w('#updateInternationalBCCDisabilityCC1'),

                $w('#updateInternationalBCCWindowPTC1'),

                $w('#updateInternationalBCCOtherC1'),

            ]
            const IBCCC2 = [

                $w('#updateInternationalBCCCeSC5'),

                $w('#updateInternationalBCCIsoSC5'),

                $w('#updateInternationalBCCCycloneRC5'),

                $w('#updateInternationalBCCPlumbingCC5'),

                $w('#updateInternationalBCCElectricalCC5'),

                $w('#updateInternationalBCCGlassCC5'),

                $w('#updateInternationalBCCFireCC5'),

                $w('#updateInternationalBCCDisabilityCC5'),

                $w('#updateInternationalBCCWindowPTC5'),

                $w('#updateInternationalBCCOtherC5'),

            ]

            //  Building Compliance Certificates Elements

            const BCCYeselements = [

                $w('#updateBuildingCCAustralianSYes'),

                $w('#updateBuildingCCNewZSYes'),

                $w('#updateBuildingCCEuropeanSYes'),

                $w('#updateBuildingCCChineseSYes'),

                $w('#updateBuildingCCAmericanSYes'),

                $w('#updateBuildingCCCanadianSYes'),

                $w('#updateBuildingCCJapaneseSYes'),

                $w('#updateBuildingCCAfricanSYes'),

                $w('#updateBuildingCCOtherYes'),

            ]
            const BCCNoelements = [

                $w('#updateBuildingCCAustralianSNo'),

                $w('#updateBuildingCCNewZSNo'),

                $w('#updateBuildingCCEuropeanSNo'),

                $w('#updateBuildingCCChineseSNo'),

                $w('#updateBuildingCCAmericanSNo'),

                $w('#updateBuildingCCCanadianSNo'),

                $w('#updateBuildingCCJapaneseSNo'),

                $w('#updateBuildingCCAfricanSNo'),

                $w('#updateBuildingCCOtherNo'),

            ]
            const BCCC1 = [

                $w('#updateBuildingCCAustralianSC1'),

                $w('#updateBuildingCCNewZSC1'),

                $w('#updateBuildingCCEuropeanSC1'),

                $w('#updateBuildingCCChineseSC1'),

                $w('#updateBuildingCCAmericanSC1'),

                $w('#updateBuildingCCCanadianSC1'),

                $w('#updateBuildingCCJapaneseSC1'),

                $w('#updateBuildingCCAfricanSC1'),

                $w('#updateBuildingCCOtherC1'),

            ]
            const BCCC2 = [

                $w('#updateBuildingCCAustralianSC5'),

                $w('#updateBuildingCCNewZSC5'),

                $w('#updateBuildingCCEuropeanSC5'),

                $w('#updateBuildingCCChineseSC5'),

                $w('#updateBuildingCCAmericanSC5'),

                $w('#updateBuildingCCCanadianSC5'),

                $w('#updateBuildingCCJapaneseSC5'),

                $w('#updateBuildingCCAfricanSC5'),

                $w('#updateBuildingCCOtherC5'),

            ]

            // Building Meterials Elements

            const buildingMYeselements = [

                $w('#updateBuildingMAluminiumTYes'),

                $w('#updateBuildingMFloorFYes'),

                $w('#updateBuildingMInsulationTYes'),

                $w('#updateBuildingMGlassYes'),

                $w('#updateBuildingMPrivacyGYes'),

                $w('#updateBuildingMWaterPAYes'),

                $w('#updateBuildingMOtherYes'),

            ]
            const buildingMNoelements = [

                $w('#updateBuildingMAluminiumTNo'),

                $w('#updateBuildingMFloorFNo'),

                $w('#updateBuildingMInsulationTNo'),

                $w('#updateBuildingMGlassNo'),

                $w('#updateBuildingMPrivacyGNo'),

                $w('#updateBuildingMWaterPANo'),

                $w('#updateBuildingMOtherNo'),

            ]
            const buildingMC1 = [

                $w('#updateBuildingMAluminiumTC1'),

                $w('#updateBuildingMFloorFC1'),

                $w('#updateBuildingMInsulationTC1'),

                $w('#updateBuildingMGlassC1'),

                $w('#updateBuildingMPrivacyGC1'),

                $w('#updateBuildingMOtherC1'),

            ]
            const buildingMC2 = [

                $w('#updateBuildingMAluminiumTC5'),

                $w('#updateBuildingMFloorFC5'),

                $w('#updateBuildingMInsulationTC5'),

                $w('#updateBuildingMGlassC5'),

                $w('#updateBuildingMPrivacyGC5'),

                $w('#updateBuildingMWaterPAC5'),

                $w('#updateBuildingMOtherC5'),

            ]

            // Engineering Standards Elements

            const engineeringYeselements = [

                $w('#updateEngineeringSFrameAYes'),

                $w('#updateEngineeringSFoundationsFSYes'),

                $w('#updateEngineeringSAdjustableFSYes'),

                $w('#updateEngineeringSAttachableWSYes'),

                $w('#updateEngineeringSOtherYes'),

            ]
            const engineeringNoelements = [

                $w('#updateEngineeringSFrameANo'),

                $w('#updateEngineeringSFoundationsFSNo'),

                $w('#updateEngineeringSAdjustableFSNo'),

                $w('#updateEngineeringSAttachableWSNo'),

                $w('#updateEngineeringSOtherNo'),

            ]
            const engineeringC1 = [

                $w('#updateEngineeringSFrameAC1'),

                $w('#updateEngineeringSFoundationsFSC1'),

                $w('#updateEngineeringSOtherC1'),

            ]
            const engineeringC2 = [

                $w('#updateEngineeringSFrameAC5'),

                $w('#updateEngineeringSFoundationsFSC5'),

                $w('#updateEngineeringSAdjustableFSC5'),

                $w('#updateEngineeringSAttachableWSC5'),

                $w('#updateEngineeringSOtherC5'),

            ]

            // Security & Safety Elements

            const securitySYeselements = [

                $w('#updateAccessSSSmartLYes'),

                $w('#updateAccessSSAdditionalLYes'),

                $w('#updateAccessSSWindowSSYes'),

                $w('#updateAccessSSWindowSBYes'),

                $w('#updateAccessSSSecurityASYes'),

                $w('#updateAccessSSSmokeAYes'),

                $w('#updateAccessSSFireEYes'),

                $w('#updateAccessSSESYes'),

                $w('#updateAccessSSEntranceRYes'),

                $w('#updateAccessSSEntranceSRYes'),

                $w('#updateAccessSSOtherYes'),

            ]
            const securitySNoelements = [

                $w('#updateAccessSSSmartLNo'),

                $w('#updateAccessSSAdditionalLNo'),

                $w('#updateAccessSSWindowSSNo'),

                $w('#updateAccessSSWindowSBNo'),

                $w('#updateAccessSSSecurityASNo'),

                $w('#updateAccessSSSmokeANo'),

                $w('#updateAccessSSFireENo'),

                $w('#updateAccessSSESNo'),

                $w('#updateAccessSSEntranceRNo'),

                $w('#updateAccessSSEntranceSRNo'),

                $w('#updateAccessSSOtherNo'),

            ]
            const securitySC1 = [

                $w('#updateAccessSSSmartLC1'),

                $w('#updateAccessSSOtherC1'),

            ]
            const securitySC2 = [

                $w('#updateAccessSSSmartLC5'),

                $w('#updateAccessSSAdditionalLC5'),

                $w('#updateAccessSSWindowSSC5'),

                $w('#updateAccessSSWindowSBC5'),

                $w('#updateAccessSSSecurityASC5'),

                $w('#updateAccessSSSmokeAC5'),

                $w('#updateAccessSSFireEC5'),

                $w('#updateAccessSSESC5'),

                $w('#updateAccessSSEntranceRC5'),

                $w('#updateAccessSSEntranceSRC5'),

                $w('#updateAccessSSOtherC5'),

            ]

            // Solar Inclusions Elements

            const solarIYeselements = [

                $w('#updateSolarISolarPYes'),

                $w('#updateSolarIInverterYes'),

                $w('#updateSolarIInverterTYes'),

                $w('#updateSolarIBatterySYes'),

                $w('#updateSolarIOtherYes'),

            ]
            const solarINoelements = [

                $w('#updateSolarISolarPNo'),

                $w('#updateSolarIInverterNo'),

                $w('#updateSolarIInverterTNo'),

                $w('#updateSolarIBatterySNo'),

                $w('#updateSolarIOtherNo'),

            ]
            const solarIC1 = [

                $w('#updateSolarISolarPC1'),

                $w('#updateSolarIInverterTC1'),

                $w('#updateSolarIBatterySC1'),

                $w('#updateSolarIOtherC1'),

            ]
            const solarIC2 = [

                $w('#updateSolarISolarPC5'),

                $w('#updateSolarIInverterC5'),
                $w('#updateSolarIBatterySC5'),

                $w('#updateSolarIOtherC5'),

            ]

            // Natural Gas Elements

            const naturalGasYesElements = [$w('#updateNaturalGOGasOYes'), ]
            const naturalGasNoElements = [$w('#updateNaturalGOGasONo'), ]
            const naturalGasElementsC1 = [

                $w('#updateNaturalGOGasOC1'),

            ]
            const naturalGasElementsC2 = [

                $w('#updateNaturalGOGasOC5'),

            ]

            // Warrantees Elements

            const warenteesYes = [

                $w('#updateWarranteesStructuralWYes'),

                $w('#updateWarranteesTermiteWYes'),

                $w('#updateWarranteesWaterPWYes'),

                $w('#updateWarranteesElectricalWYes'),

                $w('#updateWarranteesPlumbingWYes'),

                $w('#updateWarranteesColorFWYes'),

                $w('#updateWarranteesOtherYes'),

            ]
            const warenteesNo = [

                $w('#updateWarranteesStructuralWNo'),

                $w('#updateWarranteesTermiteWNo'),

                $w('#updateWarranteesWaterPWNo'),

                $w('#updateWarranteesElectricalWNo'),

                $w('#updateWarranteesPlumbingWNo'),

                $w('#updateWarranteesColorFWNo'),

                $w('#updateWarranteesOtherNo'),

            ]
            const warenteesC1 = [
                $w('#updateWarranteesStructuralWC1'),

                $w('#updateWarranteesTermiteWC1'),

                $w('#updateWarranteesWaterPWC1'),

                $w('#updateWarranteesElectricalWC1'),

                $w('#updateWarranteesPlumbingWC1'),

                $w('#updateWarranteesColorFWC1'),

                $w('#updateWarranteesOtherC1'),

            ]
            const warenteesC2 = [

                $w('#updateWarranteesStructuralWC2'),

                $w('#updateWarranteesTermiteWC2'),

                $w('#updateWarranteesWaterPWC2'),

                $w('#updateWarranteesElectricalWC2'),

                $w('#updateWarranteesPlumbingWC2'),

                $w('#updateWarranteesColorFWC2'),

                $w('#updateWarranteesOtherC2'),

            ]
            const warenteesC3 = [

                $w('#updateWarranteesStructuralWC5'),

                $w('#updateWarranteesTermiteWC5'),

                $w('#updateWarranteesWaterPWC5'),

                $w('#updateWarranteesElectricalWC5'),

                $w('#updateWarranteesPlumbingWC5'),

                $w('#updateWarranteesColorFWC5'),

                $w('#updateWarranteesOtherC5'),

            ]

            var mainString = ''
            var diffString = ''
            $w('#submitMainInfo').onClick(submitMainInfo)

            $w('#saveMainImage').onClick(saveMainImage)
            $w('#submitCapsuleLayout').onClick(submitCapsuleLayout)
            $w('#submitComfort').onClick(submitComfort)
            $w('#submitEntertainment').onClick(submitEntertainment)
            $w('#submitKitchen').onClick(submitKitchen)
            $w('#submitAppliances').onClick(submitAppliances)
            $w('#submitBathroom').onClick(submitBathroom)
            $w('#submitBedroom').onClick(submitBedroom)
            $w('#submitASafetySEcurity').onClick(submitASafetySEcurity)
            $w('#submitExterior').onClick(submitExterior)
            $w('#submitExteriorLighting').onClick(submitExteriorLighting)
            $w('#submitInteriorLighting').onClick(submitInteriorLighting)
            $w('#submitBuildingMaterial').onClick(submitBuildingMaterial)
            $w('#submitEngineeringStandards').onClick(submitEngineeringStandards)
            $w('#submitElectricalSpecs').onClick(submitElectricalSpecifications)
            $w('#submitEnergyEff').onClick(submitEnergyEffeciency)
            $w('#submitSolar').onClick(submitSolarInclusions)
            $w('#submitBuildingCC').onClick(submitBuildingComplianceCertificate)
            $w('#submitIBuildingCC').onClick(submitIntBuildingComplianceCertificate)
            $w('#submitNaturalGas').onClick(submitNaturalGas);
            $w('#submitBuildingCC').onClick(submitBuildingComplianceCertificate);
            $w('#submitIBuildingCC').onClick(submitIntBuildingComplianceCertificate);
            $w('#submitWarentees').onClick(submitWarentees);
            $w('#closeMessageBox').onClick(() => {
                $w('#messageBox').hide();
            })
            $w('#uploadAdditionalPhotos').onChange(uploadGallery)
            $w('#savePhotos').onClick(savePhotos)

            cLayoutNo.forEach((clayoutNoElement) => {
                clayoutNoElement.onChange(() => {
                    mainString = clayoutNoElement.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    if (clayoutNoElement.checked) {
                        cLayoutYes.forEach((clayoutYesElement) => {
                            let found = findSubstring(clayoutYesElement.id, stringTosearch)
                            if (found) {
                                clayoutYesElement.checked = false
                            }
                            cLayoutOptional.forEach((clayoutOpElement) => {
                                let found = findSubstring(clayoutOpElement.id, stringTosearch)
                                if (found) {
                                    clayoutOpElement.checked = false;
                                }
                            })
                        })
                    } else {
                        clayoutNoElement.checked = true;
                    }
                })

               
            })
            cLayoutYes.forEach((clayoutYesElement) => {
                clayoutYesElement.onChange(() => {
                    mainString = clayoutYesElement.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    if (clayoutYesElement.checked) {
                        cLayoutNo.forEach((clayoutNoElement) => {
                            let found = findSubstring(clayoutNoElement.id, stringTosearch)
                            if (found) {
                                clayoutNoElement.checked = false
                            }
                            cLayoutOptional.forEach((clayoutOpElement) => {
                                let found = findSubstring(clayoutOpElement.id, stringTosearch)
                                if (found) {
                                    clayoutOpElement.checked = false;
                                }
                            })
                        })
                    } else {
                        clayoutYesElement.checked = true;
                    }
                })
            })
            cLayoutOptional.forEach((clayoutOpElement) => {
                clayoutOpElement.onChange(() => {
                    mainString = clayoutOpElement.id;
                    diffString = 'Op'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    if (clayoutOpElement.checked) {
                        cLayoutNo.forEach((clayoutNoElement) => {
                            let found = findSubstring(clayoutNoElement.id, stringTosearch)
                            if (found) {
                                clayoutNoElement.checked = false
                            }
                            cLayoutYes.forEach((clayoutYesElement) => {
                                let found = findSubstring(clayoutYesElement.id, stringTosearch)
                                if (found) {
                                    clayoutYesElement.checked = false;
                                }
                            })
                        })
                    } else {
                        clayoutOpElement.checked = true;
                    }
                })
            })
            entertainmentPNo.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, entertainmentPYes, entertainmentc1, entertainmentc2);

                })
            })
            confortNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, confortYeselements, comfortC1, comfortC2);
                })
                const commonString = extractBeforeSubstring(elementNo.id, 'No')
                const imageUploadElement = $w(`#${commonString}C3`)
                imageUploadElement.onChange((event)=>{
                    const file = imageUploadElement.value[0]; // Get the selected file
                    console.log(file)
                    
                    const files = event.target.files
                    console.log(files)

                    const imageSrc = URL.createObjectURL(files[0]);
                    console.log(imageSrc)

                  
                        // Read the image file as a blob URL for preview
                        // const imageUrl = URL.createObjectURL(file);
                        
                        // // Set the src of the image element to display the preview
                        // console.log(imageUrl);
                        // $w(`#${commonString}C4`).src = imageUrl;
                        // $w(`#${commonString}C4`).show();
                    // } else {
                    //     console.log("Selected file is not an image.");
                    //     $w(`#${commonString}C4`).src = ""; // Clear preview if not an image
                    // }
                            
                })
            })
            exteriorNoElements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, exteriorYesElements, exteriorC1, exteriorC2)

                })
            })
            InteriorNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, InteriorYeselements, interiorC1, interiorC2)

                })
            })
            kitchenNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, kitchenYeselements, kitchenC1, kitchenC2)

                })
            })
            bathroomNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, bathroomYeselements, bathroomC1, bathroomC2)

                })
            })
            bedroomNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, bedroomYeselements, bedroomC1, bedroomC2)

                })
            })
            appliancesNo.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, appliancesYes, applianceC1, applianceC2)

                })
            })
            electricalSNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, electricalSYeselements, electricalSC1, electricalSC2)

                })
            })
            exteriorENoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, exteriorEYeselements, exteriorEC1, exteriorEC2)

                })
            })
            IBCCNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, IBCCYeselements, IBCCC1, IBCCC2)

                })
            })
            BCCNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, BCCYeselements, BCCC1, BCCC2)

                })
            })
            buildingMNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, buildingMYeselements, buildingMC1, buildingMC2)

                })
            })
            engineeringNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, engineeringYeselements, engineeringC1, engineeringC2)

                })
            })
            securitySNoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, securitySYeselements, securitySC1, securitySC2)

                })
            })
            solarINoelements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, solarIYeselements, solarIC1, solarIC2)

                })
            })
            warenteesNo.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, warenteesYes, warenteesC1, warenteesC3)

                })
            })
            naturalGasNoElements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, naturalGasYesElements, naturalGasElementsC1, naturalGasElementsC2)

                })
            })
            energyEffNoElements.forEach((elementNo) => {
                elementNo.onChange(() => {
                    mainString = elementNo.id;
                    diffString = 'No'
                    let stringTosearch = extractBeforeSubstring(mainString, diffString);
                    onNoChecked(elementNo, stringTosearch, energyEffYesElements, energyEffElementsC1, energyEffElementsC2)

                })
            })
            for (let t = 0; t <= entertainmentPYes.length - 1; t++) {
                let element = entertainmentPYes[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, entertainmentc1,'entertainment')

                })
                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'entertainment', featureName, uploadedImage)

               

            }
            for (let t = 0; t <= confortYeselements.length - 1; t++) {
                let element = confortYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch,  comfortC1, 'comfort' )

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'comfort', featureName, uploadedImage)

            }
            for (let t = 0; t <= InteriorYeselements.length - 1; t++) {
                let element = InteriorYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, interiorC1, 'interior');

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'Interior', featureName, uploadedImage)

            }
            for (let t = 0; t <= exteriorYesElements.length - 1; t++) {
                let element = exteriorYesElements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, exteriorC1, 'exterior');

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'exterior', featureName, uploadedImage)

            }
            for (let t = 0; t <= kitchenYeselements.length - 1; t++) {
                let element = kitchenYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, kitchenC1, 'kitchen');

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'kitchen', featureName, uploadedImage)

            }
            for (let t = 0; t <= bathroomYeselements.length - 1; t++) {
                let element = bathroomYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, bathroomC1, 'bathroom');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'bathroom', featureName, uploadedImage)

            }
            for (let t = 0; t <= bedroomYeselements.length - 1; t++) {
                let element = bedroomYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch,bedroomC1, 'bedroom');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'bedroom', featureName, uploadedImage)

            }
            for (let t = 0; t <= appliancesYes.length - 1; t++) {
                let element = appliancesYes[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, applianceC1, 'appliance');

                })

                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'appliances', featureName, uploadedImage)

            }
            for (let t = 0; t <= electricalSYeselements.length - 1; t++) {
                let element = electricalSYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch,  electricalSC1,'electrical-specifications');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'electrical-specification', featureName, uploadedImage)

            }
            for (let t = 0; t <= exteriorEYeselements.length - 1; t++) {
                let element = exteriorEYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch,exteriorEC1, 'exterior-lighting');

                })

                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'exterior-lighting', featureName, uploadedImage)

            }
            for (let t = 0; t <= IBCCYeselements.length - 1; t++) {
                let element = IBCCYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, IBCCC1, 'international-building-compliance-certificates');

                })

                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'international-building-compliance-certificates', featureName, uploadedImage)

            }
            for (let t = 0; t <= BCCYeselements.length - 1; t++) {
                let element = BCCYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, BCCC1, 'building-compliance-certificates');

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'building-compliance-certificates', featureName, uploadedImage)

            }
            for (let t = 0; t <= buildingMYeselements.length - 1; t++) {
                let element = buildingMYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, buildingMC1, 'building-material');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'building-material', featureName, uploadedImage)

            }
            for (let t = 0; t <= engineeringYeselements.length - 1; t++) {
                let element = engineeringYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch,  engineeringC1, 'engineering-standards');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'engineering-standards', featureName, uploadedImage)

            

            }
            for (let t = 0; t <= securitySYeselements.length - 1; t++) {
                let element = securitySYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, securitySC1, 'access-safety-security');

                })

                const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'access-safety-security', featureName, uploadedImage)

            }
            for (let t = 0; t <= solarIYeselements.length - 1; t++) {
                let element = solarIYeselements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, solarIC1, 'solar-inclusions');

                })

                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'solar-inclusions', featureName, uploadedImage)    

            }
            for (let t = 0; t <= warenteesYes.length - 1; t++) {
                let element = warenteesYes[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    const c1Element = $w(`#${stringTosearch}C1`)
                    const noElement = $w(`#${stringTosearch}No`)
                    const c2Element = $w(`#${stringTosearch}C2`)
                    const c5Element = $w(`#${stringTosearch}C5`)
                    const uploadedImage = $w(`#${stringTosearch}C4`)
                    const uploadImage = $w(`#${stringTosearch}C3`)
                    const featureName = $w(`#${stringTosearch}`)
                    if (element.checked) {
                        noElement.checked = false;
                        c1Element.show();
                        c2Element.onChange(()=>{
                            c5Element.show();
                             if(uploadImage.value.length == 0){
                                    uploadedImage.hide();

                                } else{
                                     uploadedImage.show()
                                }
                        })
                        uploadImage.onChange(()=>{
                        
                            uploadImage.uploadFiles()
                            .then(async (uploadedFiles) => {
                                if (uploadedFiles.length > 0) {
                                let id = uploadedFiles[0].fileName // here fileName is actually fileID as required and explained in the docs
                                const keyword = `warentees-${featureName.text}`
                                let newFileName = generateNewImageName(keyword)
                                let fileUpdates = {
                                    displayName: newFileName,
                                    label: ['warentees', 'spaceCapsules', featureName.text],
                                    }
                                const updatedLocation = await myUpdateFileDescriptorFunction(id, fileUpdates);
                                console.log(updatedLocation);

                             
                                uploadedImage.src = uploadedFiles[0].fileUrl
                                uploadedImage.show();
                                                            }
                                });
                                                
                    

                    })
                       
                    } else {
                        noElement.checked = true;

                    }
                })
            }
            for (let t = 0; t <= naturalGasYesElements.length - 1; t++) {
                let element = naturalGasYesElements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, naturalGasElementsC1, 'Natural-Gas' );

                })

                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'natural-gas', featureName, uploadedImage)    


            }
            for (let t = 0; t <= energyEffYesElements.length - 1; t++) {
                let element = energyEffYesElements[t]
                element.onChange((event) => {
                    let onchnageelementid = event.target.id
                    mainString = element.id;
                    diffString = 'Yes'
                    let stringTosearch = extractBeforeSubstring(onchnageelementid, diffString);
                    onYesChecked(element, stringTosearch, energyEffElementsC1, 'energy-efficiency');

                })
                 const commonString = extractBeforeSubstring(element.id, 'Yes')
                const uploadImage = $w(`#${commonString}C3`)
                const uploadedImage = $w(`#${commonString}C4`)
                const featureName = $w(`#${commonString}`) 

                saveImage(uploadImage, 'energy-efficiency', featureName, uploadedImage)    


            }

            // functions

            function onNoChecked(elementNo, stringTosearch, yesElement, c1, c2) {

                if (elementNo.checked) {
                    yesElement.forEach((elementYes) => {
                        let found = findSubstring(elementYes.id, stringTosearch)

                        if (found) {
                            elementYes.checked = false
                        }
                    })
                    c2.forEach((element) => {
                        let found = findSubstring(element.id, stringTosearch)
                        if (found) {

                            element.hide();
                        }
                    })
                    c1.forEach((element) => {
                        let found = findSubstring(element.id, stringTosearch)
                        if (found) {
                            element.hide();
                        }
                    })

                } else {
                    elementNo.checked = true;
                }

            }
            function onNoCheckedC3(elementNo, stringTosearch, yesElement, c1, c2, c3) {
                if (elementNo.checked) {
                    yesElement.forEach((elementYes) => {
                        let found = findSubstring(elementYes.id, stringTosearch)
                        if (found) {
                            elementYes.checked = false
                        }
                    })
                    c3.forEach((element) => {
                        let found = findSubstring(element.id, stringTosearch)
                        if (found) {

                            element.hide();
                        }
                    })
                    c2.forEach((element) => {
                        let found = findSubstring(element.id, stringTosearch)
                        if (found) {
                            element.hide();
                        }
                    })
                    c1.forEach((element) => {
                        let found = findSubstring(element.id, stringTosearch)
                        if (found) {
                            element.hide();
                        }
                    })

                } else {
                    elementNo.checked = true;
                }

            }
            function onYesChecked(element, stringTosearch, c1, sectionName) {

                const groupElement = $w(`#${stringTosearch + 'C5'}`)
                const noElement = $w(`#${stringTosearch + 'No'}`)
                const c1Element = $w(`#${stringTosearch + 'C1'}`)
                const uploadImage = $w(`#${stringTosearch + 'C3'}`)
                const uploadedImage = $w(`#${stringTosearch + 'C4'}`)
                const featureName = $w(`#${stringTosearch}`) 
                let c1Found = 1         
                

                if (element.checked) {
                    noElement.checked = false;  
                    for (let i = 0; i <= c1.length - 1; i++){
                        if(c1[i] === c1Element){
                            c1Found = 0
                            c1Element.show();
                            c1Element.onChange(()=>{
                                groupElement.show();
                                if(uploadImage.value.length == 0){
                                    uploadedImage.hide();
                                } else{
                                     uploadedImage.show()
                                }
                            })
                        }
                    }
                    console.log(c1Found)
                    if(c1Found == 1){
                         groupElement.show();
                                if(uploadImage.value.length == 0){
                                    uploadedImage.hide();
                                } else{
                                     uploadedImage.show()
                                }
                    }

                     
                    
                    }
                    else {

                        noElement.checked = true

                    } 
                   
            }                 
      
            function onYesCheckedC3(element, stringTosearch, noElement, c1, c2, c3, event) {

                if (element.checked) {
                    for (let i = 0; i <= noElement.length - 1; i++) {
                        let found = findSubstring(noElement[i].id, stringTosearch)
                        if (found) {
                            noElement[i].checked = false
                        }
                    }
                    for (let i = 0; i <= c1.length - 1; i++) {
                        let elementTosearch = stringTosearch + 'C1'
                        if (c1[i].id === elementTosearch) {
                            c1[i].show();
                            c1[i].onChange(() => {
                                for (let j = 0; j <= c2.length - 1; j++) {
                                    if (c2[j].id === stringTosearch + 'C2') {
                                        c2[j].show();
                                        c2[j].onChange(() => {
                                            for (let d = 0; d < c3.length; d++) {
                                                if (c3[d].id === stringTosearch + 'C3') {
                                                    c3[d].show();
                                                    break;
                                                }
                                            }
                                        })
                                        break;
                                    }
                                }
                            })

                        }
                    }
                    for (let c = 0; c <= c2.length - 1; c++) {
                        stringTosearch = extractBeforeSubstring(event.target.id, 'Yes')
                        let elementToSearch = stringTosearch + 'C1'
                        let elementToOpen = stringTosearch + 'C3'
                        if (c2[c].id === elementToOpen) {
                            let elementFound = false
                            for (let cl1 = 0; cl1 <= c1.length - 1; cl1++) {
                                if (c1[cl1].id === elementToSearch) {
                                    elementFound = true
                                    break;
                                }
                            }
                            if (!elementFound) {
                                c2[c].show();
                            }
                        }
                    }

                } else {
                    element.checked = true;

                }

            }
            function findSubstring(mainString, searchString) {
                // Check if the mainString contains the searchString
                let index = mainString.indexOf(searchString);

                if (index !== -1) {
                    return true;
                } else {
                    return false;
                }
            }
            function extractBeforeSubstring(mainString, searchString) {
                // Find the index of the searchString in the mainString
                let index = mainString.indexOf(searchString);

                if (index !== -1) {
                    // Extract the substring from the start to the index of searchString
                    return mainString.substring(0, index);
                } else {
                    return false
                }
            }
            $w('#updateMainCICapsuleTSpaceC').onChange(() => {

                if ($w('#updateMainCICapsuleTSpaceC').checked) {
                    $w('#updateMainCICapsuleTAppleC').checked = false

                }

            })
            $w('#updateMainCICapsuleTAppleC').onChange(() => {

                if ($w('#updateMainCICapsuleTAppleC').checked) {
                    $w('#updateMainCICapsuleTSpaceC').checked = false

                }

            })            
            async function uploadGallery(params) {
                // Gallery image upload button

                $w('#loader').show();

                const galleryUploadButton = $w("#uploadAdditionalPhotos");

                if (galleryItems.length > 0) {
                    const uploadedFiles = await galleryUploadButton.uploadFiles();
                    (uploadedFiles.map((file) => (galleryItems.push({
                        title: file.originalFileName,
                        src: file.fileUrl,
                        type: "image",

                    }))))
                    console.log(galleryItems)
                    $w('#galleryPlaceholder').src = galleryItems[0].src

                } else {

                    const uploadedFiles = await galleryUploadButton.uploadFiles();
                    galleryItems = uploadedFiles.map((file) => ({
                        title: file.originalFileName,
                        src: file.fileUrl,
                        type: "image",

                    }))
                         $w('#galleryPlaceholder').src = galleryItems[0].src

                }
                // $w('#galleryPlaceholder').collapse();
                $w('#gallery3').items = galleryItems;
                //   $w('#galleryItems').show();
                $w('#loader').hide();

            }
            $w('#gallery3').onItemClicked((event) => {
                const itemClicked = event.item.src
                $w('#galleryPlaceholder').src = itemClicked
                // $w('#galleryItems').show()
                selectedImageIndex = event.itemIndex;

            })
            $w('#moveLeft').onClick(() => {
                if (selectedImageIndex === 0) return;
                const selectedImage = galleryItems[selectedImageIndex]
                const previousImage = galleryItems[selectedImageIndex - 1]

                const tempGalleryItems = [...galleryItems]
                tempGalleryItems[selectedImageIndex - 1] = selectedImage;
                tempGalleryItems[selectedImageIndex] = previousImage;
                selectedImageIndex = selectedImageIndex - 1

                galleryItems = tempGalleryItems

                $w('#gallery3').items = galleryItems;
                

            })
            $w('#moveRight').onClick(() => {
                if (selectedImageIndex === (galleryItems.length - 1)) return;
                const selectedImage = galleryItems[selectedImageIndex]
                const previousImage = galleryItems[selectedImageIndex + 1]

                const tempGalleryItems = [...galleryItems]
                tempGalleryItems[selectedImageIndex + 1] = selectedImage;
                tempGalleryItems[selectedImageIndex] = previousImage;
                selectedImageIndex = selectedImageIndex + 1

                galleryItems = tempGalleryItems

                $w('#gallery3').items = galleryItems;

            })
            $w('#removeFromGallery').onClick(() => {
                const itemtoDelete = galleryItems.splice(selectedImageIndex, 1)
                deletedFile.push(itemtoDelete)
                $w('#gallery3').items = galleryItems;
                if(galleryItems.length > 0){
                    $w('#selectedImage').src = galleryItems[0]
                } else {
                    $w('#selectedImage').src = null
                }
            })
            async function showBoxSuccessMessage(message, message1) {
                $w('#boxSuccessMessage').text = message || "Form submitted successfully";
                $w('#boxSuccessMessage').show();
                $w('#boxErrorMessage').hide();
                $w('#messageBox').show();
                $w('#loader').hide();

            }
            async function showBoxErrorMessage(message, message1) {
                $w('#boxErrorMessage').text = message || "Some error occurred while updating records";
                $w('#boxErrorMessage').show();
                $w('#boxSuccessMessage').hide();
                $w('#messageBox').show();
                $w('#loader').hide();

            }
            async function savePhotos(params) {
                $w('#savePhotos').disable();                
                $w('#loader').show();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitMainInfo').enable();
                    return;
                } else {
                    await wixData.query('SpaceCapsuleFeatures')
                            .eq('_id', productID)                      
                            .find()
                            .then((result) => {
                                if (galleryItems.length > 0) {
                                    wixData.get('SpaceCapsuleFeatures', result.items[0]._id)
                                        .then((record) => {
                                            let uploadPromises = []
                                            // Update only the fields you want to change
                                            record.gallery = galleryItems

                                            // Save the updated record back to the collection
                                            return wixData.update("SpaceCapsuleFeatures", record);
                                        })
                                        .then((result) => {
                                        
                                            showBoxSuccessMessage("Photos Added Successfully")
                                            $w('#savePhotos').enable();

                                        })
                                        .catch((error) => {
                                            console.error("Error while uploading the photos", error);
                                            showBoxErrorMessage(error)
                                            $w('#savePhotos').enable();
                                        });

                                }

                            })
                        const fileUrls = deletedFile.map((item) => item.src)
                        await deleteUnusedFiles(fileUrls);

                    } 
            }  

            function saveImage(element, sectionName, featureName, uploadedImage) {

                   element.onChange(()=>{
                        
                            element.uploadFiles()
                            .then(async (uploadedFiles) => {
                                if (uploadedFiles.length > 0) {
                                let id = uploadedFiles[0].fileName // here fileName is actually fileID as required and explained in the docs
                                const keyword = `${sectionName}-${featureName.text}`
                                let newFileName = generateNewImageName(keyword)
                                let fileUpdates = {
                                    displayName: newFileName,
                                    label: [sectionName, 'spaceCapsules', featureName.text],
                                    }
                                const updatedLocation = await myUpdateFileDescriptorFunction(id, fileUpdates);
                                console.log(updatedLocation);

                             
                                uploadedImage.src = uploadedFiles[0].fileUrl
                                uploadedImage.show();
                                                            }
                                });
                                                
                    

                    })
                
            }

            
            async function validateForm() {
                let valid = true;
                let errorMessage = "Please fill out all of the above fields"
                mainCIc1.reverse().forEach(async (element) => {
                    valid = valid && element.valid;
                    if (!element.valid) {
                        await element.updateValidityIndication();
                        await element.scrollTo();
                    }
                })

                if (!valid) {
                    await showErrorMessage(errorMessage);
                }
                return valid;

            }
            async function showErrorMessage(message) {
                $w('#mainInfoError').text = message || "There was an error";
                $w('#mainInfoError').show();
                $w('#mainInfoError').expand();                
                $w('#loader').hide();
            }
            async function showSuccessMessage(message, message1) {
                $w('#mainInfoSuccessMessage').text = message || "Form submitted successfully";
                $w('#mainInfoSuccessMessage').show();
                $w('#loader').hide();
                $w('#submitMainInfo').enable();    
            }
            async function showBoxSuccessMessage(message, message1) {
                $w('#boxSuccessMessage').text = message || "Form submitted successfully";
                $w('#boxSuccessMessage').show();
                $w('#boxErrorMessage').hide();
                $w('#messageBox').show();
                $w('#loader').hide();

            }
            async function showBoxErrorMessage(message, message1) {
                $w('#boxErrorMessage').text = message || "Some error occurred while updating records";
                $w('#boxErrorMessage').show();
                $w('#boxSuccessMessage').hide();
                $w('#messageBox').show();
                $w('#loader').hide();

            }
            async function submitWarentees(params) { 
                $w('#loader').show();
                $w('#submitWarentees').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitWarentees').enable();
                    return;
                } 
                else {

                    const structuralWarranteeImage = $w('#updateWarranteesStructuralWC4')
                    const termiteWarranteeImage = $w('#updateWarranteesTermiteWC4')
                    const waterProofingWarranteeImage = $w('#updateWarranteesWaterPWC4')
                    const electricalWarranteeImage = $w('#updateWarranteesElectricalWC4')
                    const plumbingWarranteeImage = $w('#updateWarranteesPlumbingWC4')
                    const colorFadeWarranteeImage = $w('#updateWarranteesColorFWC4')
                    const otherWarranteesImage = $w('#updateWarranteesOtherC4')

                    const structuralWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesStructuralWNo'), 'CapsuleWarranteesQS', 'Structural Warrantee', 'warranteesFeatures');
                    const termiteWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesTermiteWNo'), 'CapsuleWarranteesQS', 'Termite Warrantee', 'warranteesFeatures');
                    const waterProofingWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesWaterPWNo'), 'CapsuleWarranteesQS', 'Water Proofing Warrantee', 'warranteesFeatures');
                    const electricalWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesElectricalWNo'), 'CapsuleWarranteesQS', 'Electrical Warrantee', 'warranteesFeatures');
                    const plumbingWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesPlumbingWNo'), 'CapsuleWarranteesQS', 'Plumbing Warrantee', 'warranteesFeatures');
                    const colorFadeWarrantee = await fieldValueWithC1C2C3($w('#updateWarranteesColorFWNo'), 'CapsuleWarranteesQS', 'Color Fade Warrantee', 'warranteesFeatures');
                    const otherWarrantees = await fieldValueWithC1C2C3($w('#updateWarranteesOtherNo'), 'CapsuleWarranteesQS', 'Other', 'warranteesFeatures');
                    const totalScore = (structuralWarrantee.score + termiteWarrantee.score + waterProofingWarrantee.score + electricalWarrantee.score
                    + plumbingWarrantee.score + colorFadeWarrantee.score + otherWarrantees.score)       

                    const modelName = $w('#updateMainCIModelC1').value;
                    const brandName = $w('#updateMainCIBrandC1').value;
                    savedBrand = brandName;
                    savedModel = modelName;

                            
                        
                    wixData.get('SpaceCapsuleFeatures', productID)
                                    .then((record) => {
                                        // Update only the fields you want to change
                                        let uploadPromises = []
                                                
                                        record.structuralWarrantee = structuralWarrantee.choice
                                        record.structuralWarranteeQualityScore  = structuralWarrantee.score
                                        record.termiteWarrantee = termiteWarrantee.choice
                                        record.termiteWarranteeQualityScore  = termiteWarrantee.score
                                        record.waterProofingWarrantee = waterProofingWarrantee.choice
                                        record.waterProofingWarranteeQualityScore   = waterProofingWarrantee.score
                                        record.electricalWarrantee = electricalWarrantee.choice
                                        record.electricalWarranteeQualityScore  = electricalWarrantee.score
                                        record.plumbingWarrantee = plumbingWarrantee.choice
                                        record.plumbingWarranteeQualityScore  = plumbingWarrantee.score
                                        record.colorFadeWarrantee = colorFadeWarrantee.choice
                                        record.colorFadeWarranteeQualityScore  = colorFadeWarrantee.score
                                        record.otherWarrantees = otherWarrantees.choice
                                        record.otherWarranteesQualityScore  = otherWarrantees.score

                                        record.structuralWarranteeImage = structuralWarranteeImage.src
                                        record.termiteWarranteeImage = termiteWarranteeImage.src
                                        record.waterProofingWarranteeImage = waterProofingWarranteeImage.src
                                        record.electricalWarranteeImage = electricalWarranteeImage.src
                                        record.plumbingWarranteeImage = plumbingWarranteeImage.src
                                        record.colourFadeWarranteeImage = colorFadeWarranteeImage.src
                                        record.otherWarranteesImage = otherWarranteesImage.src
                                        
                                        const prevTotalQS = record.totalWarranteesQualityScore
                                    
                                        record.totalWarranteesQualityScore  = totalScore
                                        
                                        record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS                                    
                                        return wixData.update("SpaceCapsuleFeatures", record);
                                        

                                    })
                                    .then((updatedRecord) => {
                                        // Save the updated record back to the collection
                                        
                                    })
                                    .then((result) => {
                                        
                                        showBoxSuccessMessage("Capsule Warrantees Information Added Successfully")
                                        $w('#submitWarentees').enable();

                                    })
                                    .catch((error) => {
                                        console.log(error)
                                        if(error.errorCode != -7755){
                                            showBoxErrorMessage(error.errorDesciption)

                                        }
                                        $w('#submitWarentees').enable();
                                    });
                    }
            } 
            async function submitIntBuildingComplianceCertificate(params) {
                $w('#loader').show();
                 $w('#submitIBuildingCC').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitIBuildingCC').enable();
                    return;
                } 
                else {

                        const ceStandardsImage = $w('#updateInternationalBCCCeSC4')
                        const isoStandardsImage = $w('#updateInternationalBCCIsoSC4')
                        const cycloneRatingImage = $w('#updateInternationalBCCCycloneRC4')
                        const plumbingCertificationImage = $w('#updateInternationalBCCPlumbingCC4')
                        const electricalCertificationImage = $w('#updateInternationalBCCElectricalCC4')
                        const glassComplianceImage = $w('#updateInternationalBCCGlassCC4')
                        const fireComplianceImage = $w('#updateInternationalBCCFireCC4')
                        const disabilityComplianceImage = $w('#updateInternationalBCCDisabilityCC4')
                        const windowPressureTestedImage = $w('#updateInternationalBCCWindowPTC4')
                        const otherInternationalBuildingComplianceImage = $w('#updateInternationalBCCOtherC4')

                        const modelName = $w('#updateMainCIModelC1').value
                        const brandName = $w('#updateMainCIBrandC1').value
                        savedBrand = brandName;
                        savedModel = modelName

                        const ce = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCCeSNo'), 'CapsuleIntBuildingCompCertQS', 'CE Standards', 'internationalBuildingComplianceCertificatesFeatures');
                        const iso = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCIsoSNo'), 'CapsuleIntBuildingCompCertQS', 'ISO Standards', 'internationalBuildingComplianceCertificatesFeatures');
                        const cycloneRated = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCCycloneRNo'), 'CapsuleIntBuildingCompCertQS', 'Cyclone Rating', 'internationalBuildingComplianceCertificatesFeatures');
                        const plumbingCertification = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCPlumbingCNo'), 'CapsuleIntBuildingCompCertQS', 'Plumbing Certification', 'internationalBuildingComplianceCertificatesFeatures');
                        const electricalCertification = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCElectricalCNo'), 'CapsuleIntBuildingCompCertQS', 'Electrical Certification', 'internationalBuildingComplianceCertificatesFeatures');
                        const glassCompliance = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCGlassCNo'), 'CapsuleIntBuildingCompCertQS', 'Glass Compliance', 'internationalBuildingComplianceCertificatesFeatures');
                        const fireResistance = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCFireCNo'), 'CapsuleIntBuildingCompCertQS', 'Fire Compliance', 'internationalBuildingComplianceCertificatesFeatures');
                        const disabilityCompliance = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCDisabilityCNo'), 'CapsuleIntBuildingCompCertQS', 'Disability Compliance', 'internationalBuildingComplianceCertificatesFeatures');
                        const windPressureTested = await fieldValueWithC1C2fortextinput($w('#updateInternationalBCCWindowPTNo'), 'CapsuleIntBuildingCompCertQS', 'Window Pressure Tested', 'internationalBuildingComplianceCertificatesFeatures');
                        const otherInternationalCompliance = await fieldValueWithC1C2($w('#updateInternationalBCCOtherNo'), 'CapsuleIntBuildingCompCertQS', 'Other', 'internationalBuildingComplianceCertificatesFeatures');
                        const totalScore = (ce.score+iso.score+cycloneRated.score+plumbingCertification.score+electricalCertification.score
                        +glassCompliance.score+ fireResistance.score+disabilityCompliance.score+windPressureTested.score+otherInternationalCompliance.score)
                        

                        wixData.get('SpaceCapsuleFeatures', productID)
                                        .then((record) => {

                                            let uploadPromises = []
                                            // Update only the fields you want to change
                                            record.ce = ce.choice
                                            record.ceStandardsQualityScore  = ce.score
                                            record.iso = iso.choice
                                            record.isoStandardsQualityScore  = iso.score
                                            record.cycloneRated = cycloneRated.choice
                                            record.cycloneRatingQualityScore  = cycloneRated.score
                                            record.plumbingCertification = plumbingCertification.choice
                                            record.plumbingCertificationQualityScore  = plumbingCertification.score
                                            record.electricalCertification = electricalCertification.choice
                                            record.electricalCertificationQualityScore  = electricalCertification.score
                                            record.glassCompliance = glassCompliance.choice
                                            record.glassComplianceQualityScore  = glassCompliance.score
                                            record.fireResistance = fireResistance.choice
                                            record.fireComplianceQualityScore  = fireResistance.score
                                            record.disabilityCompliance = disabilityCompliance.choice
                                            record.disabilityComplianceQualityScore  = disabilityCompliance.score
                                            record.windPressureTested = windPressureTested.choice
                                            record.windowPressureTestedQualityScore  = windPressureTested.score
                                            record.otherInternationalCompliance = otherInternationalCompliance.choice
                                            record.otherInternationalBuildingComplianceCertificatesQualityScore  = otherInternationalCompliance.score

                                            record.ceStandardsImage = ceStandardsImage.src
                                            record.isoStandardsImage = isoStandardsImage.src
                                            record.cycloneRatingStandards = cycloneRatingImage.src
                                            record.plumbingCertificationImage = plumbingCertificationImage.src
                                            record.electricalCertificationImage = electricalCertificationImage.src
                                            record.glassComplianceImage = glassComplianceImage.src
                                            record.fireComplianceImage = fireComplianceImage.src
                                            record.disabilityComplianceImage = disabilityComplianceImage.src
                                            record.windowPressureTestedImage = windowPressureTestedImage.src
                                            record.otherInternationalBuildingComplianceImage = otherInternationalBuildingComplianceImage.src
                                            
                                            const prevTotalQS = record.totalInternationalBuildingComplianceCertificatesQualityScore
                                        
                                            record.totalInternationalBuildingComplianceCertificatesQualityScore  = totalScore
                                            
                                            record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                            return wixData.update("SpaceCapsuleFeatures", record);
                                        

                                           

                                        })
                                        .then((updatedRecord) => {
                                            // Save the updated record back to the collection
                                            
                                        })
                                        .then((result) => {
                                            
                                            showBoxSuccessMessage("Capsule International Building Compliance Certificates  Information Added Successfully")
                                            $w('#submitIBuildingCC').enable()

                                        })
                                        .catch((error) => {
                                                                                       
                                            if(error.errorCode != -7755){
                                                 showBoxErrorMessage(error.errorDescription)

                                                 }   
                                            $w('#submitIBuildingCC').enable()
                                        });

                        

            }}
            async function submitBuildingComplianceCertificate(params) {
                $w('#loader').show();
                $w('#submitBuildingCC').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitBuildingCC').enable();
                    return;
                } 
                else {

                const australianStandardsImage = $w('#updateBuildingCCAustralianSC4')
                const newZealandStandardsImage = $w('#updateBuildingCCNewZSC4')
                const europeanStandardsImage = $w('#updateBuildingCCEuropeanSC4')
                const chineseStandardsImage = $w('#updateBuildingCCChineseSC4')
                const aericanStandardsImage = $w('#updateBuildingCCAmericanSC4')
                const canadianStandardsImage = $w('#updateBuildingCCCanadianSC4')
                const japaneseStandardsImage = $w('#updateBuildingCCJapaneseSC4')
                const africanStandardsImage = $w('#updateBuildingCCAfricanSC4')
                const otherBuildingComplianceStandardsImage = $w('#updateBuildingCCOtherC4')

                const austandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCAustralianSNo'), 'CapsuleBuildingComplianceCertQS', 'Australian Standards', 'buildingComplianceCertificatesFeatures');
                const nzstandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCNewZSNo'), 'CapsuleBuildingComplianceCertQS', 'New Zealand Standards', 'buildingComplianceCertificatesFeatures');
                const eustandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCEuropeanSNo'), 'CapsuleBuildingComplianceCertQS', 'European Standards', 'buildingComplianceCertificatesFeatures');
                const chinesestandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCChineseSNo'), 'CapsuleBuildingComplianceCertQS', 'Chinese Standards', 'buildingComplianceCertificatesFeatures');
                const americanstandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCAmericanSNo'), 'CapsuleBuildingComplianceCertQS', 'American Standards', 'buildingComplianceCertificatesFeatures');
                const canadianstandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCCanadianSNo'), 'CapsuleBuildingComplianceCertQS', 'Canadian Standards', 'buildingComplianceCertificatesFeatures');
                const japanesestandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCJapaneseSNo'), 'CapsuleBuildingComplianceCertQS', 'Japanese Standards', 'buildingComplianceCertificatesFeatures');
                const africanstandard = await fieldValueWithC1C2fortextinput($w('#updateBuildingCCAfricanSNo'), 'CapsuleBuildingComplianceCertQS', 'African Standards', 'buildingComplianceCertificatesFeatures');
                const other = await fieldValueWithC1C2($w('#updateBuildingCCOtherNo'), 'CapsuleBuildingComplianceCertQS', 'Other', 'buildingComplianceCertificatesFeatures');
                const totalScore = (austandard.score + nzstandard.score + eustandard.score + chinesestandard.score + americanstandard.score
                + canadianstandard.score + japanesestandard.score + africanstandard.score + other.score)

                const modelName = $w('#updateMainCIModelC1').value;
                const brandName = $w('#updateMainCIBrandC1').value;
                savedBrand = brandName;
                savedModel = modelName;

                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {
                                    let uploadPromises = []
                                    // Update only the fields you want to change

                                   

                                    record.smokeAlarms = austandard.choice
                                    record.australianStandardsQualityScore  = austandard.score
                                    record.smartKeyOptionHotelUse = nzstandard.choice
                                    record.newZealandStandardsQualityScore  = nzstandard.score
                                    record.washingMachineIncluded = eustandard.choice
                                    record.europeanStandardsQualityScore  = eustandard.score
                                    record.exteriorWindowFrameLights = chinesestandard.choice
                                    record.chineseStandardsQualityScore  = chinesestandard.score
                                    record.entrySafetyRailing = americanstandard.choice
                                    record.americanStandardsQualityScore  = americanstandard.score
                                    record.colourOptions = canadianstandard.choice
                                    record.canadianStandardsQualityScore  = canadianstandard.score
                                    record.foundationsStandsFeet = japanesestandard.choice
                                    record.japaneseStandardsQualityScore  = japanesestandard.score
                                    record.frameType = africanstandard.choice
                                    record.africanStandardsQualityScore  = africanstandard.score
                                    record.frameAssembly = other.choice
                                    record.otherBuildingComplianceCertificatesQualityScore  = other.score

                                    record.australianStandardsImage = australianStandardsImage.src
                                    record.newZealandStandardsImage = newZealandStandardsImage.src
                                    record.europeanStandardsImage = europeanStandardsImage.src
                                    record.chineseStandardsImage = chineseStandardsImage.src
                                    record.americanStandardsImage = aericanStandardsImage.src
                                    record.canadianStandardsImage = canadianStandardsImage.src
                                    record.japaneseStandardsImage = japaneseStandardsImage.src
                                    record.africanStandardsImage = africanStandardsImage.src
                                    record.otherBuildingComplianceStandards = otherBuildingComplianceStandardsImage.src
                                    
                                    const prevTotalQS = record.totalBuildingComplianceCertificatesQualityScore
                                  
                                    record.totalBuildingComplianceCertificatesQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    // Wait for all image uploads to complete
                                     return wixData.update("SpaceCapsuleFeatures", record);

                                    

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    
                                    showBoxSuccessMessage("Capsule Building Compliance Certificates  Information Added Successfully")
                                    $w('#submitBuildingCC').enable()

                                })
                                .catch((error) => {
                                    console.error("Error updating Building Compliance Certificates Section", error);
                                    if(error.errorCode != -7755){
                                        showBoxErrorMessage(error.errorDescription)

                                    }
                                    $w('#submitBuildingCC').enable()
                                });

                        

                } 

            }
            async function submitNaturalGas(params) {
                $w('#loader').show();
                $w('#submitNaturalGas').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitNaturalGas').enable();
                    return;
                } 
                else {
                    const gasOptionsImage = $w('#updateNaturalGOGasOC4')

                    const gasOptions = await fieldValueWithC1C2($w('#updateNaturalGOGasONo'), 'CapsuleNaturalGasOptionsQS', 'Gas Options', 'naturalGasOptionsFeatures');

                    const modelName = $w('#updateMainCIModelC1').value
                    const brandName = $w('#updateMainCIBrandC1').value
                    savedBrand = brandName;
                    savedModel = modelName

                    wixData.get('SpaceCapsuleFeatures', productID)
                                    .then((record) => {
                                        let uploadPromises = []
                                        // Update only the fields you want to change
                                        record.gasOptions = gasOptions.choice
                                        record.gasOptionsQualityScore  = gasOptions.score

                                        record.gasOptionsImage = gasOptionsImage.src
                                        
                                        const prevTotalQS = record.totalNaturalGasOptionsQualityScore
                                    
                                        record.totalNaturalGasOptionsQualityScore  = gasOptions.score
                                        
                                        record.totalQualityScore = record.totalQualityScore + gasOptions.score - prevTotalQS

                                        return wixData.update("SpaceCapsuleFeatures", record);
                                      

                                    })
                                    .then((updatedRecord) => {
                                        // Save the updated record back to the collection
                                        
                                    })
                                    .then((result) => {
                                        $w('#submitNaturalGas').enable()
                                        showBoxSuccessMessage("Capsule Natural Gas Information Added Successfully")

                                    })
                                    .catch((error) => {
                                        $w('#submitNaturalGas').enable()
                                        console.error("Error updating Natural Gas Section", error);
                                        if(error.errorCode != -7755){
                                                showBoxErrorMessage(error.errorDesciption)

                                        }
                                    });

                            

                    } 

            }
            async function submitSolarInclusions(params) {
                $w('#loader').show();
                $w('#submitSolar').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitSolar').enable();
                    return;
                } 
                else {

                const solarPanelsImage = $w('#updateSolarISolarPC4')
                const inverterImage = $w('#updateSolarIInverterC4')
                const batterySuppliedImage = $w('#updateSolarIBatterySC4')
                // const solarInverterTypeImage = $w('#solarIInverterTC4')
                const otherSolarInclusionsImage = $w('#updateSolarIOtherC4')
                const solarPanels = await fieldValueWithC1C2fortextinput($w('#updateSolarISolarPNo'), 'CapsuleSolarInclusionsQS', 'Solar Panels', 'solarInclusionsFeatures');
                const inverter = await fieldValueWithoutC1C2($w('#updateSolarIInverterNo'), 'CapsuleSolarInclusionsQS', 'Inverter', 'solarInclusionsFeatures');
                const inverterType = await fieldValueWithC1C2($w('#updateSolarIInverterTNo'), 'CapsuleSolarInclusionsQS', 'Inverter Type', 'solarInclusionsFeatures');
                const batterySupplied = await fieldValueWithC1C2($w('#updateSolarIBatterySNo'), 'CapsuleSolarInclusionsQS', 'Battery Supplied', 'solarInclusionsFeatures');
                const otherSolarInclusions1 = await fieldValueWithC1C2($w('#updateSolarIOtherNo'), 'CapsuleSolarInclusionsQS', 'Other', 'solarInclusionsFeatures');
                const totalScore = solarPanels.score + inverter.score + inverterType.score + batterySupplied.score + otherSolarInclusions1.score

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName
              

                            wixData.get('SpaceCapsuleFeatures', productID)
                                .then(async(record) => {

                                    let uploadPromises = []

                                    // Update only the fields you want to change
                                    record.solarPanels = solarPanels.choice
                                    record.solarPanelsQualityScore  = solarPanels.score
                                    record.inverter = inverter.choice
                                    record.inverterQualityScore  = inverter.score
                                    record.inverterType = inverterType.choice
                                    record.inverterTypeQualityScore  = inverterType.score
                                    record.batterySupplied = batterySupplied.choice
                                    record.batterySuppliedQualityScore  = batterySupplied.score
                                    record.otherSolarInclusions1 = otherSolarInclusions1.choice
                                    record.otherSolarInclusionsQualityScore  = otherSolarInclusions1.score

                                    record.solarPanelsImage = solarPanelsImage.src
                                    record.inverterImage = inverterImage.src
                                    record.batterySuppliedImage = batterySuppliedImage.src
                                    record.otherSolarInclusionsImage = otherSolarInclusionsImage.src
                                    


                                    
                                    const prevTotalQS = record.totalSolarInclusionsQualityScore
                                  
                                    record.totalSolarInclusionsQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    // return wixData.update("SpaceCapsuleFeatures", updatedRecord);
                                })
                                .then((result) => {
                                    $w('#submitSolar').enable();
                                    showBoxSuccessMessage("Capsule Solar Inclusions Information Added Successfully")
                                    
                                })
                                .catch((error) => {
                                    console.error("Error updating Solar Inclusions Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitSolar').enable();
                                });

                
                }

            }
            async function submitEnergyEffeciency(params) {

                $w('#loader').show();
                $w('#submitSolar').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitEnergyEff').enable();
                    return;
                } 
                else {

                const hotWaterRatingImage = $w('#updateEnergyEHotWRC4')
                const exhaustFanRatingImage = $w('#updateEnergyEExhaustFRC4')
                const airConditioningRatingImage = $w('#updateEnergyEAirCRC4')
                const freshAirSystemRatingImage = $w('#updateEnergyEFreshASRC4')
                const heaterRatingImage = $w('#updateEnergyEHeaterRC4')
                const floorHeatingRatingImage = $w('#updateEnergyEFloorHRC4')
                const rangehoodRatingImage = $w('#updateEnergyERangehoodRC4')
                const ovenRatingImage = $w('#updateEnergyEOvenRC4')
                const microwaveRatingImage = $w('#updateEnergyEMicrowaveRC4')
                const fridgeRatingImage = $w('#updateEnergyEFridgeRC4')
                const cooktopRatingImage = $w('#updateEnergyECooktopRC4')
                const dishwasherRatingImage = $w('#updateEnergyEDishwasherRC4')

                const hotWaterRating = await fieldValueWithC1C2($w('#updateEnergyEHotWRNo'), 'CapsuleEnergyEfficiencyQS', 'Hot Water Rating', 'energyEfficiencyFeatures');
                const exhaustFanRating = await fieldValueWithC1C2($w('#updateEnergyEExhaustFRNo'), 'CapsuleEnergyEfficiencyQS', 'Exhaust Fan Rating', 'energyEfficiencyFeatures');
                const airConditioningRating = await fieldValueWithC1C2($w('#updateEnergyEAirCRNo'), 'CapsuleEnergyEfficiencyQS', 'Air Conditioning Rating', 'energyEfficiencyFeatures');
                const freshAirSystemRating = await fieldValueWithC1C2($w('#updateEnergyEFreshASRNo'), 'CapsuleEnergyEfficiencyQS', 'Fresh Air System Rating', 'energyEfficiencyFeatures');
                const heaterRating = await fieldValueWithC1C2($w('#updateEnergyEHeaterRNo'), 'CapsuleEnergyEfficiencyQS', 'Heater Rating', 'energyEfficiencyFeatures');
                const floorHeatingRating = await fieldValueWithC1C2($w('#updateEnergyEFloorHRNo'), 'CapsuleEnergyEfficiencyQS', 'Floor Heating Rating', 'energyEfficiencyFeatures');
                const rangehoodRating = await fieldValueWithC1C2($w('#updateEnergyERangehoodRNo'), 'CapsuleEnergyEfficiencyQS', 'Rangehood Rating', 'energyEfficiencyFeatures');
                const ovenEnergyRating = await fieldValueWithC1C2($w('#updateEnergyEOvenRNo'), 'CapsuleEnergyEfficiencyQS', 'Oven Rating', 'energyEfficiencyFeatures');
                const microwaveEnergyRating = await fieldValueWithC1C2($w('#updateEnergyEMicrowaveRNo'), 'CapsuleEnergyEfficiencyQS', 'Microwave Rating', 'energyEfficiencyFeatures');
                const fridgeEnergyRating = await fieldValueWithC1C2($w('#updateEnergyEFridgeRNo'), 'CapsuleEnergyEfficiencyQS', 'Fridge Rating', 'energyEfficiencyFeatures');
                const cooktopEnergyRating = await fieldValueWithC1C2($w('#updateEnergyECooktopRNo'), 'CapsuleEnergyEfficiencyQS', 'Cooktop Rating', 'energyEfficiencyFeatures');
                const dishwasherEnergyRating = await fieldValueWithC1C2($w('#updateEnergyEDishwasherRNo'), 'CapsuleEnergyEfficiencyQS', 'Dishwasher Rating', 'energyEfficiencyFeatures');
                const totalScore = (hotWaterRating.score + exhaustFanRating.score + airConditioningRating.score+ freshAirSystemRating.score+
                heaterRating.score + floorHeatingRating.score + rangehoodRating.score + ovenEnergyRating.score + microwaveEnergyRating.score + 
                fridgeEnergyRating.score + cooktopEnergyRating.score + dishwasherEnergyRating.score)
                
                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.hotWaterRating = hotWaterRating.choice
                                    record.hotWaterRatingQualityScore  = hotWaterRating.score
                                    record.exhaustFanRating = exhaustFanRating.choice
                                    record.exhaustFanRatingQualityScore  = exhaustFanRating.score
                                    record.airConditioningRating = airConditioningRating.choice
                                    record.airConditioningRatingQualityScore  = airConditioningRating.score
                                    record.freshAirSystemRating = freshAirSystemRating.choice
                                    record.freshAirSystemRatingQualityScore  = freshAirSystemRating.score
                                    record.heaterRating = heaterRating.choice
                                    record.heaterRatingQualityScore  = heaterRating.score
                                    record.floorHeatingRating = floorHeatingRating.choice
                                    record.floorHeatingRatingQualityScore  = floorHeatingRating.score
                                    record.rangehoodRating = rangehoodRating.choice
                                    record.rangehoodRatingQualityScore  = rangehoodRating.score
                                    record.ovenEnergyRating = ovenEnergyRating.choice
                                    record.ovenRatingQualityScore  = ovenEnergyRating.score
                                    record.microwaveEnergyRating = microwaveEnergyRating.choice
                                    record.microwaveRatingQualityScore  = microwaveEnergyRating.score
                                    record.fridgeEnergyRating = fridgeEnergyRating.choice
                                    record.fridgeRatingQualityScore  = fridgeEnergyRating.score
                                    record.cooktopEnergyRating = cooktopEnergyRating.choice
                                    record.cooktopRatingQualityScore  = cooktopEnergyRating.score
                                    record.dishwasherEnergyRating = dishwasherEnergyRating.choice
                                    record.dishwasherRatingQualityScore  = dishwasherEnergyRating.score

                                    record.hotWaterRatingImage = hotWaterRatingImage.src
                                    record.exhaustFanRatingImage = exhaustFanRatingImage.src
                                    record.airConditioningRatingImage = airConditioningRatingImage.src
                                    record.freshAirSystemRatingImage = freshAirSystemRatingImage.src
                                    record.heaterRatingImage = heaterRatingImage.src
                                    record.floorHeatingRating1 = floorHeatingRatingImage.src
                                    record.rangehoodRating1 = rangehoodRatingImage.src
                                    record.ovenRatingImage1 = ovenRatingImage.src
                                    record.fridgeRatingImage = microwaveRatingImage.src
                                    record.microwaveRatingImage = fridgeRatingImage.src
                                    record.cooktopRatingImage = cooktopRatingImage.src
                                    record.dishwasherRatingImage = dishwasherRatingImage.src
                                    
                                    const prevTotalQS = record.totalEnergyEfficiencyQualityScore
                                  
                                    record.totalEnergyEfficiencyQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    showBoxSuccessMessage("Capsule  Energy Efficiency Information Added Successfully")
                                    $w('#submitEnergyEff').enable()

                                })
                                .catch((error) => {
                                    console.error("Error updating Energy Efficiency Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitEnergyEff').enable()
                                });

                    

                } 

            }
            async function submitElectricalSpecifications(params) {
                $w('#loader').show();
                $w('#submitElectricalSpecs').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitElectricalSpecs').enable();
                    return;
                } 
                else {
                    const electricalPowerSupplyOptionsImage = $w('#updateElectricalSElectricalPSOC4')
                    const internationalPowerOutletsImage = $w('#updateElectricalSInternationalPOC4')
                    const integratedDeviceChargingImage = $w('#updateElectricalSIntegratedDCC4')

                    const electricalPowerSupplyOptions = await fieldValueWithC1C2($w('#updateElectricalSElectricalPSONo'), 'CapsuleElectricalSpecificationsQS', 'Electrical Power Supply Options', 'electricalSpecificationsFeatures');
                    const internationalPowerOutlets = await fieldValueWithC1C2($w('#updateElectricalSInternationalPONo'), 'CapsuleElectricalSpecificationsQS', 'International Power Outlets', 'electricalSpecificationsFeatures');
                    const integratedDeviceCharging = await fieldValueWithC1C2($w('#updateElectricalSIntegratedDCNo'), 'CapsuleElectricalSpecificationsQS', 'Integrated Device Charging', 'electricalSpecificationsFeatures');
                    const otherElectricalSpecifications = await fieldValueWithC1C2fortextinput($w('#updateElectricalSPowerCNo'), 'CapsuleElectricalSpecificationsQS', 'Power Consumption (kW)', 'electricalSpecificationsFeatures')
                    const totalScore = ( electricalPowerSupplyOptions.score + internationalPowerOutlets.score + 
                    integratedDeviceCharging.score + otherElectricalSpecifications.score)

                    const modelName = $w('#updateMainCIModelC1').value
                    const brandName = $w('#updateMainCIBrandC1').value
                    savedBrand = brandName;
                    savedModel = modelName
                

                    wixData.get('SpaceCapsuleFeatures', productID)
                                    .then((record) => {

                                        let uploadPromises = []
                                        // Update only the fields you want to change
                                        record.electricalPowerSupplyOptions =electricalPowerSupplyOptions.choice
                                        record.electricalPowerSupplyOptionsQualityScore  =electricalPowerSupplyOptions.score
                                        record.internationalPowerOutlets = internationalPowerOutlets.choice
                                        record.internationalPowerOutletsQualityScore  = internationalPowerOutlets.score
                                        record.integratedDeviceCharging = integratedDeviceCharging.choice
                                        record.integratedDeviceChargingQualityScore  = integratedDeviceCharging.score
                                        record.otherElectricalSpecifications =otherElectricalSpecifications.choice
                                        record.otherElectricalSpecificationsQualityScore  =otherElectricalSpecifications.score

                                        record.electricalPowerSupplyOptionsImage = electricalPowerSupplyOptionsImage.src
                                        record.internationalPowerOutletsImage = internationalPowerOutletsImage.src
                                        record.integratedDeviceChargingImage = integratedDeviceChargingImage.src
                                        
                                        const prevTotalQS = record.totalElectricalSpecificationsQualityScore
                                    
                                        record.totalElectricalSpecificationsQualityScore  = totalScore
                                        
                                        record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                        return wixData.update("SpaceCapsuleFeatures", record);

                                       

                                    })
                                    .then((updatedRecord) => {
                                        // Save the updated record back to the collection
                                        
                                    })
                                    .then((result) => {
                                        showBoxSuccessMessage("Capsule Electrical Specifications Information Added Successfully")
                                        $w('#submitElectricalSpecs').enable()

                                    })
                                    .catch((error) => {
                                        console.error("Error updating Electrical Specifications Section", error);
                                        showBoxErrorMessage(error.errorDesciption)
                                        $w('#submitElectricalSpecs').enable()
                                    });

                            

                    } 

            } 
            async function submitEngineeringStandards(params) {
                $w('#loader').show();
                $w('#submitEngineeringStandards').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitEngineeringStandards').enable();
                    return;
                } 
                else {
                const frameAssemblyImage = $w('#updateEngineeringSFrameAC4')
                const foundationsFeetStandsImage = $w('#updateEngineeringSFoundationsFSC4')
                const adjustableFeetStandsImage = $w('#updateEngineeringSAdjustableFSC4')
                const attachableWheelStandsImage = $w('#updateEngineeringSAttachableWSC4')
                const otherEngineeringStandardsImage = $w('#updateEngineeringSOtherC4')

                const aluminiumTreatment =  await fieldValueWithC1C2($w('#updateEngineeringSFrameANo'), 'CapsuleEngineeringStandardsQS', 'Frame Assembly', 'engineeringStandardsFeatures');
                const meetsAustralianStandards =  await fieldValueWithC1C2($w('#updateEngineeringSFoundationsFSNo'), 'CapsuleEngineeringStandardsQS', 'Foundations (Feet / Stands)', 'engineeringStandardsFeatures');
                const adjustableFeetStands = await  fieldValueWithoutC1C2($w('#updateEngineeringSAdjustableFSNo'), 'CapsuleEngineeringStandardsQS', 'Adjustable Feet / Stands (height)', 'engineeringStandardsFeatures');
                const attachableWheelStands =  await fieldValueWithoutC1C2($w('#updateEngineeringSAttachableWSNo'), 'CapsuleEngineeringStandardsQS', 'Attachable Wheel Stands', 'engineeringStandardsFeatures');
                const otherEngineeringStandards =  await fieldValueWithC1C2($w('#updateEngineeringSOtherNo'), 'CapsuleEngineeringStandardsQS', 'Other', 'engineeringStandardsFeatures');
                const totalScore = (aluminiumTreatment.score + meetsAustralianStandards.score + adjustableFeetStands.score + attachableWheelStands.score 
                + otherEngineeringStandards.score )

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName

                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {
                                    // Update only the fields you want to change
                                    let uploadPromises = []

                                    record.aluminiumTreatment = aluminiumTreatment.choice
                                    record.frameAssemblyQualityScore  = aluminiumTreatment.score
                                    record.meetsAustralianStandards = meetsAustralianStandards.choice
                                    record.foundationsFeetStandsQualityScore  = meetsAustralianStandards.score
                                    record.adjustableFeetStands = adjustableFeetStands.choice
                                    record.adjustableFeetStandsHeightQualityScore  = adjustableFeetStands.score
                                    record.attachableWheelStands = attachableWheelStands.choice
                                    record.attachableWheelStandsQualityScore  = attachableWheelStands.score
                                    record.otherEngineeringStandards = otherEngineeringStandards.choice
                                    record.otherEngineeringStandardQualityScore  = otherEngineeringStandards.score

                                    record.frameAssemblyImage = frameAssemblyImage.src
                                    record.foundationsFeetStandsImage = foundationsFeetStandsImage.src
                                    record.adjustableFeetStandsImage = adjustableFeetStandsImage.src
                                    record.attachableWheelStandsImage = attachableWheelStandsImage.src
                                    record.otherEngineeringStandardsImage = otherEngineeringStandardsImage.src
                                    
                                    const prevTotalQS = record.totalEngineeringStandardsQualityScore
                                  
                                    record.totalEngineeringStandardsQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    // return wixData.update("SpaceCapsuleFeatures", updatedRecord);
                                })
                                .then((result) => {
                                    showBoxSuccessMessage("Capsule Engineering Standard Information Added Successfully")
                                    $w('#submitEngineeringStandards').enable()

                                })
                                .catch((error) => {
                                    console.error("Error updating Engineering Standard Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitEngineeringStandards').enable()
                                });

                        

                }

            }
            async function submitBuildingMaterial(params) {
                $w('#loader').show();
                $w('#submitBuildingMaterial').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitBuildingMaterial').enable();
                    return;
                } else {
                const auminiumTypeImage = $w('#updateBuildingMAluminiumTC4')
                const floorFurnishingImage = $w('#updateBuildingMFloorFC4')
                const insulationTypeImage = $w('#updateBuildingMInsulationTC4')
                const glassImage = $w('#updateBuildingMGlassC4')
                const privacyGlassImage = $w('#updateBuildingMPrivacyGC4')
                const waterPipeAntifreezeImage = $w('#updateBuildingMWaterPAC4')
                const otherBuildingMaterialsImage = $w('#updateBuildingMOtherC4')
                
                const electricalSpecification = await fieldValueWithC1C2($w('#updateBuildingMAluminiumTNo'), 'CapsuleBuildingMaterialsQS', 'Aluminium Type', 'buildingMaterialsFeatures');
                const powerOutletsGpo = await fieldValueWithC1C2($w('#updateBuildingMFloorFNo'), 'CapsuleBuildingMaterialsQS', 'Floor Furnishing', 'buildingMaterialsFeatures');
                const floors = await fieldValueWithC1C2($w('#updateBuildingMInsulationTNo'), 'CapsuleBuildingMaterialsQS', 'Insulation Type', 'buildingMaterialsFeatures');
                const insulationType = await fieldValueWithC1C2($w('#updateBuildingMGlassNo'), 'CapsuleBuildingMaterialsQS', 'Glass', 'buildingMaterialsFeatures');
                const privacyGlass = await fieldValueWithC1C2($w('#updateBuildingMPrivacyGNo'), 'CapsuleBuildingMaterialsQS', 'Privacy Glass', 'buildingMaterialsFeatures');
                const waterPipeAntiFreeze = await fieldValueWithoutC1C2($w('#updateBuildingMWaterPANo'), 'CapsuleBuildingMaterialsQS', 'Water Pipe Antifreeze', 'buildingMaterialsFeatures');
                const otherBmaterial = await fieldValueWithC1C2($w('#updateBuildingMOtherNo'), 'CapsuleBuildingMaterialsQS', 'Other', 'buildingMaterialsFeatures');
               
                const totalScore = (electricalSpecification.score + powerOutletsGpo.score + floors.score + insulationType.score + privacyGlass.score
                + waterPipeAntiFreeze.score + otherBmaterial.score )

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []

                                    // Update only the fields you want to change
                                    record.electricalSpecification = electricalSpecification.choice
                                    record.aluminiumTypeQualityScore  = electricalSpecification.score
                                    record.powerOutletsGpo = powerOutletsGpo.choice
                                    record.floorFurnishingQualityScore  = powerOutletsGpo.score
                                    record.floors = floors.choice
                                    record.insulationTypeQualityScore  = floors.score
                                    record.insulationType = insulationType.choice
                                    record.glassQualityScore  = insulationType.score
                                    record.privacyGlass = privacyGlass.choice
                                    record.privacyGlassQualityScore  = privacyGlass.score
                                    record.waterPipeAntiFreeze = waterPipeAntiFreeze.choice
                                    record.waterPipeAntifreezeQualityScore  = waterPipeAntiFreeze.score
                                    record.glass = otherBmaterial.choice
                                    record.otherBuildingMaterialsQualityScore  = otherBmaterial.score

                                    record.aluminiumTypeImage = auminiumTypeImage.src
                                    record.floorFurnishingImage = floorFurnishingImage.src
                                    record.insulationTypeImage = insulationTypeImage.src
                                    record.glassImage = glassImage.src
                                    record.privacyGlassImage = privacyGlassImage.src
                                    record.waterPipeAntifreezeImage = waterPipeAntifreezeImage.src
                                    record.otherBuildingMaterialsImage = otherBuildingMaterialsImage.src


                                    
                                    const prevTotalQS = record.totalBuildingMaterialsQualityScore
                                  
                                    record.totalBuildingMaterialsQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);

                                    

                                    

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    return wixData.update("SpaceCapsuleFeatures", updatedRecord);
                                })
                                .then((result) => {
                                    $w('#submitBuildingMaterial').enable()
                                    showBoxSuccessMessage("Capsule Building Material Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating building material Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitBuildingMaterial').enable()
                                });
                    
                }

            }

            async function submitInteriorLighting(params) {
                $w('#loader').show();
                $w('#submitInteriorLighting').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitInteriorLighting').enable();
                    return;
                } 
                else {
                const interiorLedSmartLightsImage = $w('#updateInteriorLInteriorLSMC4')
                const interiorAmbientLightSystemImage = $w('#updateInteriorLInteriorALSC4')
                const interiorInternalLightSystemImage = $w('#updateInteriorLInteriorILSC4')
                const interiorLightBeltImage = $w('#updateInteriorLInteriorLBC4')
                const interiorCeilingStripLights1 = $w('#updateInteriorLInteriorCSLC4')
                const interiorFloorStripLightsImage = $w('#updateInteriorLInteriorFSLC4')
                const interiorFeatureWallLightsImage = $w('#updateInteriorLInteriorFWLC4')
                const otherInteriorLightingImage = $w('#updateInteriorLOtherC4')

                const interiorLedSmartLights = await fieldValueWithC1C2($w('#updateInteriorLInteriorLSMNo'), 'InteriorLighting', 'Interior - LED Smart Lights', 'interiorLighting');
                const interiorAmbientLightSystem = await fieldValueWithC1C2($w('#updateInteriorLInteriorALSNo'), 'InteriorLighting', 'Interior - Ambient Light System', 'interiorLighting');
                const interiorInternalRgbLightSystem = await fieldValueWithC1C2($w('#updateInteriorLInteriorILSNo'), 'InteriorLighting', 'Interior - Internal Light System', 'interiorLighting');
                const interiorLightBelt = await fieldValueWithC1C2($w('#updateInteriorLInteriorLBNo'), 'InteriorLighting', 'Interior - Light Belt', 'interiorLighting');
                const interiorCeilingStripLights = await fieldValueWithC1C2($w('#updateInteriorLInteriorCSLNo'), 'InteriorLighting', 'Interior - Ceiling Strip Lights', 'interiorLighting');
                const interiorFloorStripLights = await fieldValueWithC1C2($w('#updateInteriorLInteriorFSLNo'), 'InteriorLighting', 'Interior - Floor Strip Lights', 'interiorLighting');
                const exteriorFeatureWallLights = await fieldValueWithC1C2($w('#updateInteriorLInteriorFWLNo'), 'InteriorLighting', 'Interior - Feature Wall Lights', 'interiorLighting');
                const otherInteriorLighting = await fieldValueWithC1C2($w('#updateInteriorLOtherNo'), 'InteriorLighting', 'Other', 'interiorLighting');
                const totalScore = (interiorLedSmartLights.score + interiorAmbientLightSystem.score + interiorInternalRgbLightSystem.score
                + interiorLightBelt.score + interiorCeilingStripLights.score + interiorFloorStripLights.score + exteriorFeatureWallLights.score
                + otherInteriorLighting.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName
                
                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {
                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.interiorLedSmartLights = interiorLedSmartLights.choice
                                    record.interiorLedSmartLightsQualityScore  = interiorLedSmartLights.score
                                    record.interiorAmbientLightSystem = interiorAmbientLightSystem.choice
                                    record.interiorAmbientLightSystemQualityScore  = interiorAmbientLightSystem.score
                                    record.interiorInternalRgbLightSystem = interiorInternalRgbLightSystem.choice
                                    record.interiorInternalLightSystemQualityScore  = interiorInternalRgbLightSystem.score
                                    record.interiorLightBelt = interiorLightBelt.choice
                                    record.interiorLightBeltQualityScore  = interiorLightBelt.score
                                    record.interiorCeilingStripLights = interiorCeilingStripLights.choice
                                    record.interiorCeilingStripLightsQualityScore  = interiorCeilingStripLights.score
                                    record.interiorFloorStripLights = interiorFloorStripLights.choice
                                    record.interiorFloorStripLightsQualityScore  = interiorFloorStripLights.score
                                    record.exteriorFeatureWallLights = exteriorFeatureWallLights.choice
                                    record.interiorFeatureWallLightsQualityScore  = exteriorFeatureWallLights.score
                                    record.otherInteriorLighting = otherInteriorLighting.choice
                                    record.otherLightingQualityScore  = otherInteriorLighting.score

                                    record.interiorLedSmartLightsImage = interiorLedSmartLightsImage.src
                                    record.interiorAmbientLightSystemImage = interiorAmbientLightSystemImage.src
                                    record.interiorInternalLightSystemImage = interiorInternalLightSystemImage.src
                                    record.interiorLightBeltImage = interiorLightBeltImage.src
                                    record.interiorCeilingStripLights1 = interiorCeilingStripLights1.src
                                    record.interiorFloorStripLightsImage = interiorFloorStripLightsImage.src
                                    record.interiorFeatureWallLightsImage = interiorFeatureWallLightsImage.src
                                    record.otherInteriorLightingImage = otherInteriorLightingImage.src
                                    
                                    const prevTotalQS = record.totalInteriorLightingQualityScore
                                  
                                    record.totalInteriorLightingQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                            
                                   

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    
                                })
                                .then((result) => {
                                            $w('#submitInteriorLighting').enable();
                                            showBoxSuccessMessage("Capsule Interior Lighting Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating interior lighting Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitInteriorLighting').enable();
                                });

                
                } 

            }      

            async function submitExteriorLighting(params) {
                $w('#loader').show();
                $w('#submitExteriorLighting').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitExteriorLighting').enable();
                    return;
                } 
                else {
                const ledWindowStripLightsImage = $w('#updateExteriorLLEDWSLC4')
                const featureWallLightsImage = $w('#updateExteriorLFeatureWLC4')
                const mainDoorLightsImage = $w('#updateExteriorLMainDLC4')
                const balconyLightsImage = $w('#updateExteriorLBalconyLC4')
                const externalFloorLightsImage = $w('#updateExteriorLExternalFLC4')
                const otherExteriorLightingImage = $w('#updateExteriorLOtherC4')

                const ledWindowStripLights = await fieldValueWithC1C2($w('#updateExteriorLLEDWSLNo'), 'CapsuleExteriorLightingQS', 'LED Window Strip Lights', 'exteriorLightingFeatures');
                const featureWallLights = await fieldValueWithC1C2($w('#updateExteriorLFeatureWLNo'), 'CapsuleExteriorLightingQS', 'Feature Wall Lights', 'exteriorLightingFeatures');
                const mainDoorLights = await fieldValueWithC1C2($w('#updateExteriorLMainDLNo'), 'CapsuleExteriorLightingQS', 'Main Door Lights', 'exteriorLightingFeatures');
                const balconyLights = await fieldValueWithC1C2($w('#updateExteriorLBalconyLNo'), 'CapsuleExteriorLightingQS', 'Balcony Lights', 'exteriorLightingFeatures');
                const externalFloorLights = await fieldValueWithC1C2($w('#updateExteriorLExternalFLNo'), 'CapsuleExteriorLightingQS', 'External Floor Lights', 'exteriorLightingFeatures');
                const otherExteriorLighting = await fieldValueWithC1C2($w('#updateExteriorLOtherNo'), 'CapsuleExteriorLightingQS', 'Other', 'exteriorLightingFeatures');
                const totalScore = (ledWindowStripLights.score + featureWallLights.score + mainDoorLights.score + balconyLights.score
                + externalFloorLights.score + otherExteriorLighting.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {
                                    // Update only the fields you want to change
                                    let uploadPromises = []
                                    record.ledWindowStripLights = ledWindowStripLights.choice
                                    record.ledWindowStripLightsQualityScore   = ledWindowStripLights.score
                                    record.featureWallLight = featureWallLights.choice
                                    record.featureWallLightsQualityScore  = featureWallLights.score
                                    record.mainDoorLights = mainDoorLights.choice
                                    record.mainDoorLightsQualityScore  = mainDoorLights.score
                                    record.balconyLights = balconyLights.choice
                                    record.balconyLightsQualityScore  = balconyLights.score
                                    record.externalFloorLights = externalFloorLights.choice
                                    record.externalFloorLightsQualityScore  = externalFloorLights.score
                                    record.otherExteriorLighting = otherExteriorLighting.choice
                                    record.otherExteriorLightingQualityScore  = otherExteriorLighting.score

                                    record.ledWindowStripLightsImage = ledWindowStripLightsImage.src
                                    record.ledWindowStripLightsImage = featureWallLightsImage.src
                                    record.mainDoorLightsImage = mainDoorLightsImage.src
                                    record.balconyLightsImage = balconyLightsImage.src
                                    record.externalFloorLightsImage = externalFloorLightsImage.src
                                    record.otherExteriorLightingImage = otherExteriorLightingImage.src
                                    
                                    const prevTotalQS = record.totalExteriorLightingQualityScore
                                  
                                    record.totalExteriorLightingQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   
                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    
                                    showBoxSuccessMessage("Capsule Exterior Lighting Information Added Successfully")
                                    $w('#submitExteriorLighting').enable()

                                })
                                .catch((error) => {
                                    console.error("Error updating exterior lighting Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitExteriorLighting').enable()
                                });
                        
                    

                } 

            }

            async function submitExterior(params) {
                 $w('#loader').show();
                $w('#submitExterior').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitExterior').enable();
                    return;
                } 
                else {
                const exteriorColourOptionsImage = $w('#updateExteriorExteriorCOC4')
                const aluminiumTreatmentImage = $w('#updateExteriorAluminiumTC4')
                const paintProtectionImage = $w('#updateExteriorPaintPC4')
                const antiInsectTreatmentImage = $w('#updateExteriorAntiITC4')
                const termiteProtectionImage = $w('#updateExteriorTermitePC4')
                const rainwaterGutteringImage = $w('#updateExteriorRainwaterGC4')
                const otherExteriorImage = $w('#updateExteriorOtherC4')

                const exteriorColourOptions = await fieldValueWithC1C2($w('#updateExteriorExteriorCONo'), 'CapsuleExteriorQS', 'Exterior Colour Options', 'exteriorFeatures');
                const aluminiumTreatment1 = await fieldValueWithC1C2($w('#updateExteriorAluminiumTNo'), 'CapsuleExteriorQS', 'Aluminium Treatment', 'exteriorFeatures');
                const paintProtection = await fieldValueWithC1C2fortextinput($w('#updateExteriorPaintPNo'), 'CapsuleExteriorQS', 'Paint Protection', 'exteriorFeatures');
                const antiInsectTreatment = await fieldValueWithC1C2fortextinput($w('#updateExteriorAntiITNo'), 'CapsuleExteriorQS', 'Anti Insect Treatment', 'exteriorFeatures');
                const termiteProtection = await fieldValueWithC1C2fortextinput($w('#updateExteriorTermitePNo'), 'CapsuleExteriorQS', 'Termite Protection', 'exteriorFeatures');
                const rainwaterGuttering = await fieldValueWithoutC1C2($w('#updateExteriorRainwaterGNo'), 'CapsuleExteriorQS', 'Rainwater Guttering', 'exteriorFeatures');
                const otherExterior = await fieldValueWithC1C2($w('#updateExteriorOtherNo'), 'CapsuleExteriorQS', 'Other', 'exteriorFeatures');
                const totalScore = (exteriorColourOptions.score + aluminiumTreatment1.score + paintProtection.score + antiInsectTreatment.score+
                termiteProtection.score + rainwaterGuttering.score + otherExterior.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName



                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.exteriorColourOptions = exteriorColourOptions.choice
                                    record.exteriorColourOptionsQualityScore  = exteriorColourOptions.score
                                    record.aluminiumTreatment1 = aluminiumTreatment1.choice
                                    record.aluminiumTreatmentQualityScore  = aluminiumTreatment1.score
                                    record.paintProtection = paintProtection.choice
                                    record.paintProtectionQualityScore  = paintProtection.score
                                    record.antiInsectTreatment = antiInsectTreatment.choice
                                    record.antiInsectTreatmentQualityScore  = antiInsectTreatment.score
                                    record.termiteProtection = termiteProtection.choice
                                    record.termiteProtectionQualityScore  = termiteProtection.score
                                    record.rainwaterGuttering = rainwaterGuttering.choice
                                    record.rainwaterGutteringQualityScore  = rainwaterGuttering.score
                                    record.otherExterior = otherExterior.choice
                                    record.otherExteriorQualityScore  = otherExterior.score

                                    record.exteriorColourOptionsImage = exteriorColourOptionsImage.src
                                    record.aluminiumTreatmentImage = aluminiumTreatmentImage.src
                                    record.paintProtectionImage = paintProtectionImage.src
                                    record.antiInsectTreatmentImage = antiInsectTreatmentImage.src
                                    record.termiteProtectionImage = termiteProtectionImage.src
                                    record.rainwaterGutteringImage = rainwaterGutteringImage.src
                                    record.otherExteriorImage = otherExteriorImage.src

                                    
                                    const prevTotalQS = record.totalExteriorQualityScore
                                  
                                    record.totalExteriorQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    $w('#submitExterior').enable();
                                    showBoxSuccessMessage("Capsule Exterior Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitExterior').enable();
                                });

                     

                } 

            }

            async function submitASafetySEcurity(params) {
                $w('#loader').show();
                $w('#submitASafetySEcurity').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitASafetySEcurity').enable();
                    return;
                } 
                else {
                const smartLockMainEntranceImage = $w('#updateAccessSSSmartLC4')
                const additionalLocksImage = $w('#updateAccessSSAdditionalLC4')
                const windowSecurityScreensImage = $w('#updateAccessSSWindowSSC4')
                const windowSecurityBarsImage = $w('#updateAccessSSWindowSBC4')
                const securityAlarmSystemImage = $w('#updateAccessSSSecurityASC4')
                const smokeAlarmsImage = $w('#updateAccessSSSmokeAC4')
                const fireExtinguisherImage = $w('#updateAccessSSFireEC4')
                const entranceStairsImage = $w('#updateAccessSSESC4')
                const entranceRampImage = $w('#updateAccessSSEntranceRC4')
                const entranceSafetyRailImage = $w('#updateAccessSSEntranceSRC4')
                const otherAccessSafetySecurityImage = $w('#updateAccessSSOtherC4')

                const smartlockMainEntrance = await fieldValueWithC1C2fortextinput($w('#updateAccessSSSmartLNo'), 'CapsuleAccessSafetySecurityQS', 'Smart Lock (main entrance)', 'accessSafetySecurityFeatures');
                const additionalLock = await fieldValueWithoutC1C2($w('#updateAccessSSAdditionalLNo'), 'CapsuleAccessSafetySecurityQS', 'Additional Locks', 'accessSafetySecurityFeatures');
                const windowSecurityScreen = await fieldValueWithoutC1C2($w('#updateAccessSSWindowSSNo'), 'CapsuleAccessSafetySecurityQS', 'Window Security Screens', 'accessSafetySecurityFeatures');
                const windowSecurityBars = await fieldValueWithoutC1C2($w('#updateAccessSSWindowSBNo'), 'CapsuleAccessSafetySecurityQS', 'Window Security Bars', 'accessSafetySecurityFeatures');
                const securityAlarmSystem = await fieldValueWithoutC1C2($w('#updateAccessSSSecurityASNo'), 'CapsuleAccessSafetySecurityQS', 'Security Alarm System', 'accessSafetySecurityFeatures');
                const smokeAlarms = await fieldValueWithoutC1C2($w('#updateAccessSSSmokeANo'), 'CapsuleAccessSafetySecurityQS', 'Smoke Alarms', 'accessSafetySecurityFeatures');
                const fireExtinguisher = await fieldValueWithoutC1C2($w('#updateAccessSSFireENo'), 'CapsuleAccessSafetySecurityQS', 'Fire Extinguisher', 'accessSafetySecurityFeatures');
                const entranceStairs = await fieldValueWithoutC1C2($w('#updateAccessSSESNo'), 'CapsuleAccessSafetySecurityQS', 'Entrance Stairs', 'accessSafetySecurityFeatures');
                const entranceRamp = await fieldValueWithoutC1C2($w('#updateAccessSSEntranceRNo'), 'CapsuleAccessSafetySecurityQS', 'Entrance Ramp', 'accessSafetySecurityFeatures');
                const entranceSafetyRail = await fieldValueWithoutC1C2($w('#updateAccessSSEntranceSRNo'), 'CapsuleAccessSafetySecurityQS', 'Entrance Safety Rail', 'accessSafetySecurityFeatures');
                const otherSecuritySafety = await fieldValueWithC1C2($w('#updateAccessSSOtherNo'), 'CapsuleAccessSafetySecurityQS', 'Other', 'accessSafetySecurityFeatures');
                const totalScore = (smartlockMainEntrance.score + additionalLock.score + windowSecurityScreen.score + windowSecurityBars.score +
                securityAlarmSystem.score + smokeAlarms.score + fireExtinguisher.score + entranceStairs.score + entranceRamp.score + entranceSafetyRail.score +
                otherSecuritySafety.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName

                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.meetsAustralianStandards11 = smartlockMainEntrance.choice
                                    record.smartLockMainEntranceQualityScore  = smartlockMainEntrance.score
                                    record.meetsAustralianStandards111 = additionalLock.choice
                                    record.additionalLocksQualityScore  = additionalLock.score
                                    record.meetsAustralianStandards12 = windowSecurityScreen.choice
                                    record.windowSecurityScreensQualityScore  = windowSecurityScreen.score
                                    record.disabilityComplied = windowSecurityBars.choice
                                    record.windowSecurityBarsQualityScore  = windowSecurityBars.score
                                    record.solarReady = securityAlarmSystem.choice
                                    record.securityAlarmSystemQualityScore  = securityAlarmSystem.score
                                    record.countryOfOrigin = smokeAlarms.choice
                                    record.smokeAlarmsQualityScore  = smokeAlarms.score
                                    record.capacity = fireExtinguisher.choice
                                    record.fireExtinguisherQualityScore  = fireExtinguisher.score
                                    record.entryRampStairsIncluded = entranceStairs.choice
                                    record.entranceStairsQualityScore  = entranceStairs.score
                                    record.entranceRamp = entranceRamp.choice
                                    record.entranceRampQualityScore  = entranceRamp.score
                                    record.entranceSafetyRail = entranceSafetyRail.choice
                                    record.entranceSafetyRailQualityScore  = entranceSafetyRail.score
                                    record.otherSecuritySafety = otherSecuritySafety.choice
                                    record.otherAccessSafetySecurityQualityScore = otherSecuritySafety.score

                                    record.smartLockMainEntranceImage = smartLockMainEntranceImage.src
                                    record.additionalLocksImage = additionalLocksImage.src
                                    record.windowSecurityScreensImage = windowSecurityScreensImage.src
                                    record.windowSecurityBarsImage = windowSecurityBarsImage.src
                                    record.securityAlarmSystemImage = securityAlarmSystemImage.src
                                    record.smokeAlarmsImage = smokeAlarmsImage.src
                                    record.fireExtinguisherImage = fireExtinguisherImage.src
                                    record.entranceStairsImage = entranceStairsImage.src
                                    record.entranceRampImage = entranceRampImage.src
                                    record.entranceSafetyRailImage = entranceSafetyRailImage.src
                                    record.otherAccessSafetySecurityImage = otherAccessSafetySecurityImage.src
                                    

                                    const prevTotalQS = record.totalAccessSafetySecurityQualityScore
                                  
                                    record.totalAccessSafetySecurityQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    
                                    return wixData.update("SpaceCapsuleFeatures", record);
                                   
                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    
                                })
                                .then((result) => {
                                    $w('#submitASafetySEcurity').enable()
                                    showBoxSuccessMessage("Capsule Access Safety and Security Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitASafetySEcurity').enable()
                                });

                      

                } 

            }

            async function submitBedroom(params) {
                $w('#loader').show();
                $w('#submitBedroom').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitBedroom').enable();
                    return;
                } 
                else {

                const builtinWardrobesImage = $w('#updateBedroomBedroomBIWC4')
                const bedroomAirConditioningImage = $w('#updateBedroomBedroomACC4')
                const heatingImage1 = $w('#updateBedroomBedroomHC4')
                const freshAirSystemImage1 = $w('#updateBedroomBedroomFASC4')
                const floorHeatingImage1 = $w('#updateBedroomBedroomFHC4')
                const lightingControlsImage = $w('#updateBedroomLightingCC4')
                const bedsideLightingImage = $w('#updateBedroomBedsideLC4')
                const bedroomSunRoofImage = $w('#updateBedroomBedroomSRC4')
                // const privacyBlindsImage1 = $w('#updateBedroomBedroomPBC4')
                const blockoutBlindsImage1 = $w('#updateBedroomBedroomBBC4')
                const otherBedroomImage = $w('#updateBedroomOtherC4')

                const bedroomSpaces = await getScoreFromDataCollection1($w('#updateBedroomBedroomSC1'), 'CapsuleBedroomQS', 'No. of Bedroom Spaces', 'bedroomFeatures' )
                const builtinWardrobes = await fieldValueWithoutC1C2($w('#updateBedroomBedroomBIWNo'), 'CapsuleBedroomQS', 'Bedroom Built-in Wardrobes', 'bedroomFeatures');
                const bedroomAirConditioningHeating = await fieldValueWithC1C2($w('#updateBedroomBedroomACNo'), 'CapsuleBedroomQS', 'Bedroom Air Conditioning', 'bedroomFeatures');
                const heating = await fieldValueWithC1C2($w('#updateBedroomBedroomHNo'), 'CapsuleBedroomQS', 'Bedroom Heating', 'bedroomFeatures');
                const freshAirSystem1 = await fieldValueWithC1C2($w('#updateBedroomBedroomFASNo'), 'CapsuleBedroomQS', 'Bedroom Fresh Air System', 'bedroomFeatures');
                const floorHeating1 = await fieldValueWithoutC1C2($w('#updateBedroomBedroomFHNo'), 'CapsuleBedroomQS', 'Bedroom Floor Heating', 'bedroomFeatures');
                const lightingControls = await fieldValueWithC1C2($w('#updateBedroomLightingCNo'), 'CapsuleBedroomQS', 'Lighting Controls', 'bedroomFeatures');
                const featureWallLight = await fieldValueWithC1C2($w('#updateBedroomLightingCNo'), 'CapsuleBedroomQS', 'Lighting Controls', 'bedroomFeatures');
                const bedLights = await fieldValueWithoutC1C2($w('#updateBedroomBedsideLNo'), 'CapsuleBedroomQS', 'Bedside Lighting', 'bedroomFeatures');
                const bedroomSunRoof = await fieldValueWithoutC1C2($w('#updateBedroomBedroomSRNo'), 'CapsuleBedroomQS', 'Bedroom Sun Roof', 'bedroomFeatures');
                const privacyBlinds1 = await fieldValueWithC1C2($w('#updateBedroomBedroomPBNo'), 'CapsuleBedroomQS', 'Bedroom Privacy Blinds', 'bedroomFeatures');
                const blockoutBlinds1 = await fieldValueWithC1C2($w('#updateBedroomBedroomBBNo'), 'CapsuleBedroomQS', 'Bedroom Blockout Blinds', 'bedroomFeatures');
                const otherBedroom = await fieldValueWithC1C2($w('#updateBedroomOtherNo'), 'CapsuleBedroomQS', 'Other', 'bedroomFeatures');
                
                const totalScore = bedroomSpaces + builtinWardrobes.score + bedroomAirConditioningHeating.score + heating.score +
                freshAirSystem1.score + floorHeating1.score + lightingControls.score + featureWallLight.score + bedLights.score +
                bedroomSunRoof.score + privacyBlinds1.score + blockoutBlinds1.score + otherBedroom.score

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName

              
                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []

                                    // Update only the fields you want to change
                                    record.bedroomSpaces = $w('#updateBedroomBedroomSC1').value
                                    record.numberOfBedroomSpacesQualityScore  = bedroomSpaces
                                    record.builtinWardrobes = builtinWardrobes.choice
                                    record.builtinWardrobesQualityScore1  = builtinWardrobes.score
                                    record.bedroomAirConditioningHeating = bedroomAirConditioningHeating.choice
                                    record.bedroomAirConditioningQualityScore  = bedroomAirConditioningHeating.score
                                    record.heating = heating.choice
                                    record.heatingQualityScore1  = heating.score
                                    record.freshAirSystem1 = freshAirSystem1.choice
                                    record.freshAirSystemQualityScore1  = freshAirSystem1.score
                                    record.floorHeating1 = floorHeating1.choice
                                    record.floorHeatingQualityScore1  = floorHeating1.score
                                    record.lightingControls = lightingControls.choice
                                    record.lightingControlsQualityScore  = lightingControls.score
                                    record.featureWallLight = featureWallLight.choice
                                    record.featureWallLightQualityScore  = featureWallLight.score
                                    record.bedLights = bedLights.choice
                                    record.bedsideLightingQualityScore  = bedLights.score
                                    record.bedroomSunRoof = bedroomSunRoof.choice
                                    record.bedroomSunRoofQualityScore  = bedroomSunRoof.score
                                    record.privacyBlinds1 = privacyBlinds1.choice
                                    record.privacyBlindsQualityScore1  = privacyBlinds1.score
                                    record.blockoutBlinds1 = blockoutBlinds1.choice
                                    record.blockoutBlindsQualityScore1  = blockoutBlinds1.score
                                    record.otherBedroom = otherBedroom.choice
                                    record.otherBedroomQualityScore  = otherBedroom.score
                                   
                                    const prevTotalQS = record.totalBedroomQualityScore
                                  
                                    record.totalBedroomQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS

                                    record.builtinWardrobesImage = builtinWardrobesImage.src
                                    record.bedroomAirConditioningImage = bedroomAirConditioningImage.src
                                    record.heatingImage1 = heatingImage1.src
                                    record.freshAirSystemImage1 = freshAirSystemImage1.src
                                    record.floorHeatingImage1 = floorHeatingImage1.src
                                    record.lightingControlsImage = lightingControlsImage.src
                                    record.bedsideLightingImage = bedsideLightingImage.src
                                    record.bedroomSunRoofImage = bedroomSunRoofImage.src
                                    record.blockoutBlindsImage1 = blockoutBlindsImage1.src
                                    record.otherBedroomImage = otherBedroomImage.src
                                    

                                       
                                
                                    // Wait for all image uploads to complete
                                    return wixData.update("SpaceCapsuleFeatures", record);

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    
                                })
                                .then((result) => {
                                    $w('#submitBedroom').enable()
                                    showBoxSuccessMessage("Capsule Bedroom Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating Bedroom Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitBedroom').enable()
                                });
                        

                } 

            }

            async function submitBathroom(params) {
                $w('#loader').show();
                $w('#submitBathroom').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitBathroom').enable();
                    return;
                } 
                else {
                const toiletImage = $w('#updateBathroomToiletC4')
                const mirrorImage = $w('#updateBathroomMirrorC4')
                const showerImage = $w('#updateBathroomShowerC4')
                const vanityBasinImage = $w('#updateBathroomVanityBC4')
                const tapwareColourImage = $w('#updateBathroomBathroomTCC4')
                const bathroomBenchMaterialImage = $w('#updateBathroomBathroomBMC4')
                const towelRailImage = $w('#updateBathroomTowelRC4')
                const exhaustFanImage = $w('#updateBathroomExhaustFC4')
                const otherBathroomImage = $w('#updateBathroomOtherC4')

                const toilet = await fieldValueWithC1C2($w('#updateBathroomToiletNo'), 'CapsuleBathroomQS', 'Toilet', 'bathroomFeatures');
                const bathroomMirror = await fieldValueWithC1C2($w('#updateBathroomMirrorNo'), 'CapsuleBathroomQS', 'Mirror', 'bathroomFeatures');
                const shower = await fieldValueWithC1C2($w('#updateBathroomShowerNo'), 'CapsuleBathroomQS', 'Shower', 'bathroomFeatures');
                const vanityBasin = await fieldValueWithC1C2($w('#updateBathroomVanityBNo'), 'CapsuleBathroomQS', 'Vanity/Basin', 'bathroomFeatures');
                const tapware = await fieldValueWithC1C2($w('#updateBathroomBathroomTCNo'), 'CapsuleBathroomQS', 'Bathroom Tapware Colour', 'bathroomFeatures');
                const bathroomBenchMaterial = await fieldValueWithC1C2($w('#updateBathroomBathroomBMNo'), 'CapsuleBathroomQS', 'Bathroom Bench Material', 'bathroomFeatures');
                const hotTowelRail = await fieldValueWithC1C2($w('#updateBathroomTowelRNo'), 'CapsuleBathroomQS', 'Towel Rail', 'bathroomFeatures');
                const exhaustFan = await fieldValueWithC1C2($w('#updateBathroomExhaustFNo'), 'CapsuleBathroomQS', 'Exhaust Fan', 'bathroomFeatures');
                const otherBathroom = await fieldValueWithC1C2($w('#updateBathroomOtherNo'), 'CapsuleBathroomQS', 'Other', 'bathroomFeatures');
                const totalScore = (toilet.score+bathroomMirror.score+shower.score+vanityBasin.score+tapware.score+bathroomBenchMaterial.score+
                hotTowelRail.score+exhaustFan.score+otherBathroom.score)
                
                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName

                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {
                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.toilet = toilet.choice
                                    record.toiletQualityScore  = toilet.score
                                    record.bathroomMirror = bathroomMirror.choice
                                    record.mirrorQualityScore  = bathroomMirror.score
                                    record.shower =shower.choice
                                    record.showerQualityScore  =shower.score
                                    record.vanityBasin = vanityBasin.choice
                                    record.vanityBasinQualityScore  = vanityBasin.score
                                    record.tapwareColour = tapware.choice
                                    record.tapwareColourQualityScore1  = tapware.score
                                    record.bathroomBenchMaterial = bathroomBenchMaterial.choice
                                    record.bathroomBenchMaterialQualityScore  = bathroomBenchMaterial.score
                                    record.hotTowelRail = hotTowelRail.choice
                                    record.towelRailQualityScore  = hotTowelRail.score
                                    record.exhaustFan = exhaustFan.choice
                                    record.exhaustFanQualityScore  = exhaustFan.score
                                    record.otherBathroom = otherBathroom.choice
                                    record.otherBathroomQualityScore  = otherBathroom.score
                                    record.totalBathroomQualityScore  = totalScore


                                    record.toiletImage = toiletImage.src
                                    record.mirrorImage = mirrorImage.src
                                    record.showerImage = showerImage.src
                                    record.vanityBasinImage = vanityBasinImage.src
                                    record.tapwareColourImage1 = tapwareColourImage.src
                                    record.bathroomBenchMaterialImage = bathroomBenchMaterialImage.src
                                    record.towelRailImage = towelRailImage.src
                                    record.exhaustFanImage = exhaustFanImage.src
                                    record.otherBathroomImage = otherBathroomImage.src

                                    const prevTotalQS = record.totalBathroomQualityScore
                                  
                                    record.totalBathroomQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS
                                   
                                    return wixData.update("SpaceCapsuleFeatures", record);
                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    $w('#submitBathroom').enable()
                                    showBoxSuccessMessage("Capsule Bathroom Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating bathroom Section", error);
                                    showBoxErrorMessage(error.errorDesciption)
                                    $w('#submitBathroom').enable()
                                });

                    

                } 

            }
            

            async function submitAppliances(params) { 
                $w('#loader').show();
                $w('#submitBathroom').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitBathroom').enable();
                    return;
                } 
                else {
                // const hotWaterServiceIncludedImage = $w('#appliancesHotWSC3')
                const hotWaterServicesImage = $w('#updateAppliancesHotWSC4')
                const rangehoodIncludedImage = $w('#updateAppliancesRangehoodIC4')
                const ovenIncludedImage = $w('#updateAppliancesOvenIC4')
                const microwaveImage = $w('#updateAppliancesMicrowaveIC4')
                const fridgeImage = $w('#updateAppliancesFridgeIC4')
                const cooktopImage = $w('#updateAppliancesCooktopIC4')
                const dishwasherImage = $w('#updateAppliancesDishwasherIC4')
                const otherElectricalAppliancesImage = $w('#updateAppliancesOtherC4')

                const hotWaterServiceIncluded = await fieldValueWithC1C2($w('#updateAppliancesHotWSNo'), 'CapsuleApplianceQS', 'Hot Water Service', 'applianceFeature');
                const rangehood = await fieldValueWithoutC1C2($w('#updateAppliancesRangehoodINo'), 'CapsuleApplianceQS', 'Rangehood Included', 'applianceFeature');
                const oven = await fieldValueWithoutC1C2($w('#updateAppliancesOvenINo'), 'CapsuleApplianceQS', 'Oven Included', 'applianceFeature');
                const microwave = await fieldValueWithoutC1C2($w('#updateAppliancesMicrowaveINo'), 'CapsuleApplianceQS', 'Microwave', 'applianceFeature');
                const fridge = await fieldValueWithoutC1C2($w('#updateAppliancesFridgeINo'), 'CapsuleApplianceQS', 'Fridge', 'applianceFeature');
                const cooktop = await fieldValueWithoutC1C2($w('#updateAppliancesCooktopINo'), 'CapsuleApplianceQS', 'Cooktop', 'applianceFeature');
                const dishwasherIncluded = await fieldValueWithoutC1C2($w('#updateAppliancesDishwasherINo'), 'CapsuleApplianceQS', 'Dishwasher', 'applianceFeature');
                const otherElectricalAppliances = await fieldValueWithC1C2($w('#updateAppliancesOtherNo'), 'CapsuleApplianceQS', 'Other', 'applianceFeature');
                const totalScore = ( hotWaterServiceIncluded.score + rangehood.score + oven.score + microwave.score + fridge.score +
                cooktop.score + dishwasherIncluded.score + otherElectricalAppliances.score )

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures',productID)
                                .then((record) => {

                                    let uploadPromises = []

                                    // Update only the fields you want to change
                                    record.hotWaterServiceIncluded = hotWaterServiceIncluded.choice
                                    record.hotWaterServiceQualityScore  = hotWaterServiceIncluded.score
                                    record.rangehood = rangehood.choice
                                    record.rangehoodIncludedQualityScore  = rangehood.score
                                    record.oven = oven.choice
                                    record.ovenIncludedQualityScore  = oven.score
                                    record.microwave = microwave.choice
                                    record.microwaveQualityScore  = microwave.score
                                    record.fridge = fridge.choice
                                    record.fridgeQualityScore  = fridge.score
                                    record.cooktop = cooktop.choice
                                    record.cooktopQualityScore  = cooktop.score
                                    record.dishwasherIncluded = dishwasherIncluded.choice
                                    record.dishwasherQualityScore  = dishwasherIncluded.score
                                    record.otherElectricalAppliances = otherElectricalAppliances.choice
                                    record.otherAppliancesQualityScore  = otherElectricalAppliances.score

                                    record.hotWaterServiceImage = hotWaterServicesImage.src
                                    record.rangehoodIncludedImage = rangehoodIncludedImage.src
                                    record.ovenIncludedImage = ovenIncludedImage.src
                                    record.microwaveImage = microwaveImage.src
                                    record.fridgeImage = fridgeImage.src
                                    record.cooktopImage = cooktopImage.src
                                    record.dishwasherImage = dishwasherImage.src
                                    record.otherElectricalAppliancesImage = otherElectricalAppliancesImage.src
                                   
                                    

                                    const prevTotalQS = record.totalAppliancesQualityScore
                                  
                                    record.totalAppliancesQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS
                                    
                                    
                                    
                                  

                                    // Wait for all image uploads to complete
                                    return wixData.update("SpaceCapsuleFeatures", record);

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    
                                })
                                .then((result) => {
                                    $w('#submitAppliances').enable()
                                    showBoxSuccessMessage("Capsule Appliance Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating Appliance Section", error);
                                    showBoxErrorMessage(error.errorDescription)
                                    $w('#submitAppliances').enable();
                                });

                        
                } 

            }

            async function submitKitchen(params) {
                $w('#loader').show();
                $w('#submitKitchen').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitKitchen').enable();
                    return;
                } 
                else {
                const kitchenSinkImage = $w('#updateKitchenKitchenSC4')
                const kitchenBenchDesignImage = $w('#updateKitchenKitchenBDC4')
                const benchtopMaterialImage = $w('#updateKitchenBenchtopMC4')
                const tapwareColourImage = $w('#updateKitchenKitchenTCC4')
                const tapwareFunctionalityImage = $w('#updateKitchenTapwareFC4')
                const cupboardsImage = $w('#updateKitchenCupboardsC4')
                const drinkingWaterFiltrationImage = $w('#updateKitchenDrinkingWFC4')
                const otherKitchenImage = $w('#updateKitchenOtherC4')

                const kitchenSink = await fieldValueWithC1C2($w('#updateKitchenKitchenSNo'), 'CapsuleKitchenQS', 'Kitchen Sink', 'kitchenFeatures');
                const kitchenBenchType = await fieldValueWithC1C2($w('#updateKitchenKitchenBDNo'), 'CapsuleKitchenQS', 'Kitchen Bench Design', 'kitchenFeatures');
                const benchtopMaterial = await fieldValueWithC1C2($w('#updateKitchenBenchtopMNo'), 'CapsuleKitchenQS', 'Benchtop Material', 'kitchenFeatures');
                const tapwareColour = await fieldValueWithC1C2($w('#updateKitchenKitchenTCNo'), 'CapsuleKitchenQS', 'Kitchen Tapware Colour', 'kitchenFeatures');
                const tapwareFunctionality = await fieldValueWithC1C2($w('#updateKitchenTapwareFNo'), 'CapsuleKitchenQS', 'Tapware Functionality', 'kitchenFeatures');
                const cupboards = await fieldValueWithoutC1C2($w('#updateKitchenCupboardsNo'), 'CapsuleKitchenQS', 'Cupboards', 'kitchenFeatures');
                const filteredWater = await fieldValueWithoutC1C2($w('#updateKitchenDrinkingWFNo'), 'CapsuleKitchenQS', 'Drinking Water Filtration', 'kitchenFeatures');
                const otherKitchen = await fieldValueWithC1C2($w('#updateKitchenOtherNo'), 'CapsuleKitchenQS', 'Other', 'kitchenFeatures');
                const totalScore = (kitchenSink.score + kitchenBenchType.score+ benchtopMaterial.score+ tapwareColour.score+ tapwareFunctionality.score
                +cupboards.score+filteredWater.score+otherKitchen.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures', productID)
                                .then((record) => {

                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.kitchenSink = kitchenSink.choice
                                    record.kitchenSinkQualityScore = kitchenSink.score
                                    record.kitchenBenchType = kitchenBenchType.choice
                                    record.kitchenBenchDesignQualityScore   = kitchenBenchType.score
                                    record.benchtopMaterial = benchtopMaterial.choice
                                    record.benchtopMaterialQualityScore   = benchtopMaterial.score
                                    record.tapware = tapwareColour.choice
                                    record.tapwareColourQualityScore   = tapwareColour.score
                                    record.tapwareFunctionality = tapwareFunctionality.choice
                                    record.tapwareFunctionalityQualityScore = tapwareFunctionality.score
                                    record.cupboards = cupboards.choice
                                    record.cupboardsQualityScore   = cupboards.score
                                    record.filteredWater = filteredWater.choice
                                    record.drinkingWaterFiltrationQualityScore   = filteredWater.score
                                    record.otherKitchen = otherKitchen.choice
                                    record.otherKitchenQualityScore   = otherKitchen.score

                                    record.kitchenSinkImage = kitchenSinkImage.src
                                    record.kitchenBenchDesignImage = kitchenBenchDesignImage.src
                                    record.benchtopMaterialImage = benchtopMaterialImage.src
                                    record.tapwareColourImage = tapwareColourImage.src
                                    record.tapwareFunctionalityImage = tapwareFunctionalityImage.src
                                    record.cupboardsImage = cupboardsImage.src
                                    record.drinkingWaterFiltrationImage = drinkingWaterFiltrationImage.src
                                    record.otherKitchenImage = otherKitchenImage.src
                                    
                                    const prevTotalQS = record.totalKitchenQualityScore
                                  
                                    record.totalKitchenQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS
                                   
                                 
                                    // Wait for all image uploads to complete
                                    return wixData.update('SpaceCapsuleFeatures', record);

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                   
                                })
                                .then((result) => {
                                    $w('#submitKitchen').enable()
                                    showBoxSuccessMessage("Capsule Kitchen Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating kitchen Section", error);
                                    showBoxErrorMessage(error.errorDescription)
                                    $w('#submitKitchen').enable()
                                });

                  

                } 

            }

            async function submitEntertainment(params) {
                $w('#loader').show();
                $w('#submitEntertainment').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitEntertainment').enable();
                    return;
                } 
                else {
                const projectImage = $w('#updateEntertainmentProjectorC4')
                const projectorScreenImage = $w('#updateEntertainmentPSC4')
                const intelligentControlPanelImage = $w('#updateEntertainmentIntelligentCPC4')
                const integratedSoundSystemImage = $w('#updateEntertainmentIntegratedSSC4')
                const otherEntertainmentImage = $w('#updateEntertainmentOtherC4')

                const projector1 = await fieldValueWithoutC1C2($w('#updateEntertainmentProjectorNo'), 'CapsuleEntertainmentQS','Projector','entertainmentFeature');
                const projectorScreen = await fieldValueWithC1C2($w('#updateEntertainmentPSNo'), 'CapsuleEntertainmentQS','Projector Screen','entertainmentFeature');
                const intelligentControlPanel = await fieldValueWithC1C2($w('#updateEntertainmentIntelligentCPNo'), 'CapsuleEntertainmentQS','Intelligent Control Panel','entertainmentFeature');
                const integratedSoundSystem = await fieldValueWithC1C2($w('#updateEntertainmentIntegratedSSNo'), 'CapsuleEntertainmentQS','Integrated Sound System','entertainmentFeature');
                const otherEntertainment = await fieldValueWithC1C2($w('#updateEntertainmentOtherNo'), 'CapsuleEntertainmentQS','Other','entertainmentFeature');
                const totalScore = (projector1.score + projectorScreen.score + intelligentControlPanel.score + 
                integratedSoundSystem.score + otherEntertainment.score)

                                
                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName



                wixData.get('SpaceCapsuleFeatures', productID)  

                                .then((record) => {

                                  

                                    let uploadPromises = []
                                    // Update only the fields you want to change
                                    record.projector = projector1.choice
                                    record.projectorQualityScore  = projector1.score
                                    record.projectorScreen = projectorScreen.choice
                                    record.projectorScreenQualityScore  = projectorScreen.score
                                    record.intelligentControlPanel = intelligentControlPanel.choice
                                    record.intelligentControlPanelQualityScore  = intelligentControlPanel.score
                                    record.integratedSoundSystem = integratedSoundSystem.choice
                                    record.integratedSoundSystemQualityScore  = integratedSoundSystem.score
                                    record.otherEntertainment = otherEntertainment.choice
                                    record.otherEntertainmentQualityScore  = otherEntertainment.score
                                    if(projectImage.src != undefined){
                                        record.projectorImage = projectImage.src
                                    }
                                    console.log(projectImage.src)
                                    if(projectorScreenImage.src != undefined){
                                        record.projectorScreenImage = projectorScreenImage.src
                                    }
                                    if(intelligentControlPanelImage.src != undefined){
                                        record.intelligentControlPanelImage = intelligentControlPanelImage.src
                                    }
                                    if(integratedSoundSystemImage.src != undefined){
                                        record.integratedSoundSystemImage = integratedSoundSystemImage.src
                                    }
                                    if(otherEntertainmentImage.src != undefined){
                                        record.otherEntertainmentImage = otherEntertainmentImage.src
                                    }
                                   

                                   

                                    const prevTotalQS = record.totalEntertainmentQualityScore
                                  
                                    record.totalEntertainmentQualityScore  = totalScore
                                    
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS
                                    
                                   return wixData.update("SpaceCapsuleFeatures", record);
                                   
                                   
                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    // return wixData.update("SpaceCapsuleFeatures", updatedRecord);
                                })
                                .then((result) => {
                                    showBoxSuccessMessage("Capsule Entertainment Information Added Successfully")
                                    $w('#submitEntertainment').enable()

                                })
                                .catch((error) => {
                                    console.error("Error updating Entertainment Section", error);
                                    showBoxErrorMessage(error.errorDescription)
                                    $w('#submitEntertainment').enable()
                                    
                                });

                  

                } 

            }

            async function submitComfort(params) {
                $w('#loader').show();
                $w('#submitComfort').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitComfort').enable();
                    return;
                } 
                else {
                const acImage = $w('#updateComfortAirCC4')
                const heatingImage = $w('#updateComfortHeatingC4')
                const freashAImage = $w('#updateComfortFreshASC4')
                const floorHImage = $w('#updateComfortFloorHC4')
                const waterFImage = $w('#updateComfortWaterFSC4')
                // const privacyBImage = $w('#updateComfortPrivacyBC3')
                const blockoutBImage = $w('#updateComfortBlockoutBC4')
                const skylightImage = $w('#updateComfortSlightC4')
                const skylightBImage = $w('#updateComfortSkylightBC4')
                const otherImage = $w('#updateComfortOtherC4')

                const airConditioning = await fieldValueWithC1C2($w('#updateComfortAirCNo'), 'CapsuleComfortQS', 'Air Conditioning', 'comfortFeature');
                const heating = await fieldValueWithC1C2($w('#updateComfortHeatingNo'), 'CapsuleComfortQS', 'Heating', 'comfortFeature' );
                const freshAirSystem = await fieldValueWithC1C2($w('#updateComfortFreshASNo'), 'CapsuleComfortQS', 'Fresh Air System', 'comfortFeature' );
                const floorHeating = await fieldValueWithoutC1C2($w('#updateComfortFloorHNo'), 'CapsuleComfortQS', 'Floor Heating', 'comfortFeature' );
                const waterFiltrationSystem = await fieldValueWithoutC1C2($w('#updateComfortWaterFSNo'), 'CapsuleComfortQS', 'Water Filtration System', 'comfortFeature');
                // const privacyBlinds = await fieldValueWithC1C2($w('#comfortPrivacyBNo'), 'CapsuleComfortQS', 'Privacy Blinds', 'comfortFeature');
                const blockoutBlinds = await fieldValueWithC1C2($w('#updateComfortBlockoutBNo'), 'CapsuleComfortQS', 'Blockout Blinds', 'comfortFeature');
                const skytlight = await fieldValueWithC1C2($w('#updateComfortSlightNo'), 'CapsuleComfortQS', 'Skylight', 'comfortFeature');
                const skylightBlind = await fieldValueWithC1C2($w('#updateComfortSkylightBNo'), 'CapsuleComfortQS', 'Skylight Blind', 'comfortFeature' );
                const otherComfort = await fieldValueWithC1C2($w('#updateComfortOtherNo'), 'CapsuleComfortQS', 'Other', 'comfortFeature' );

                const totalScore = (airConditioning.score + heating.score + freshAirSystem.score + floorHeating.score + waterFiltrationSystem.score + blockoutBlinds.score + skytlight.score + skylightBlind.score + otherComfort.score)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                
                wixData.get('SpaceCapsuleFeatures', productID)
                                .then(async (record) => {

                                    // Update only the fields you want to 

                                    record.airConditioning = airConditioning.choice;
                                    record.airConditioningQualityScore  = airConditioning.score;
                                    record.text = heating.choice
                                    record.heatingQualityScore  = heating.score
                                    record.freshAirSystem = freshAirSystem.choice
                                    record.freshAirSystemQualityScore  = freshAirSystem.score
                                    record.floorHeating =floorHeating.choice
                                    record.floorHeatingQualityScore =floorHeating.score
                                    record.waterFiltrationSystem = waterFiltrationSystem.choice
                                    record.waterFiltrationSystemQualityScore  = waterFiltrationSystem.score
                                    // record.privacyBlinds = privacyBlinds.choice
                                    // record.privacyBlindsQualityScore  = privacyBlinds.score
                                    record.blockoutBlinds = blockoutBlinds.choice
                                    record.blockoutBlindsQualityScore  = blockoutBlinds.score
                                    record.skylight = skytlight.choice
                                    record.skylightQualityScore  = skytlight.score
                                    record.skylightBlind = skylightBlind.choice
                                    record.skylightBlindQualityScore  = skylightBlind.score
                                    record.otherComfort = otherComfort.choice
                                    record.otherComfortQualityScore  = otherComfort.score

                                    record.airConditioningImage = acImage.src
                                    record.heatingImage = heatingImage.src
                                    record.freshAirSystemImage = freashAImage.src
                                    record.floorHeatingImage = floorHImage.src
                                    record.waterFiltrationSystemImage = waterFImage.src
                                    record.blockoutBlindsImage = blockoutBImage.src
                                    record.skylightImage = skylightImage.src
                                    record.skylightBlindImage = skylightBImage.src
                                    record.otherComfortImage = otherImage.src

                                    const prevTotalQS = record.comfortTotalQualityScore
                                   
                                    record.comfortTotalQualityScore  = totalScore
                                 
                                    record.totalQualityScore = record.totalQualityScore + totalScore - prevTotalQS  
                                    return wixData.update("SpaceCapsuleFeatures", record);

                                })
                                .then((updatedRecord) => {
                                    // Save the updated record back to the collection
                                    
                                  
                                    
                                })
                                .then((result) => {
                                    $w('#submitComfort').enable();
                                    showBoxSuccessMessage("Capsule Comfort Information Added Successfully")

                                })
                                .catch((error) => {
                                    console.error("Error updating Comfort Section", error);
                                    showBoxErrorMessage(error.errorDescription)
                                    $w('#submitComfort').enable();
                                   
                                });

                 

                }
            } 

            function generateNewImageName(section, modelName, brandName ) {
                let timestamp = new Date().getTime();
                console.log(savedBrand, '///', savedModel)
                return `${savedModel.toLowerCase()}-space-capsule-${savedBrand.toLowerCase()}-${section.toLowerCase()}-${timestamp}`
            }

            async function submitCapsuleLayout(params) {
                $w('#loader').show();
                $w('#submitCapsuleLayout').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitCapsuleLayout').enable();
                    return;
                } 
                else {

                const sbaOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLseparatedBANo'), 'CapsuleLayoutQS', 'Separated Bedroom Area', 'csFeature');
                const bathroomOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLBuiltIWNo'), 'CapsuleLayoutQS', 'Bathroom', 'csFeature');
                const kitchenOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLBathroomNo'), 'CapsuleLayoutQS', 'Kitchen', 'csFeature');
                const buitlinWOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLKitchenNo'), 'CapsuleLayoutQS', 'Built-in Wardrobes', 'csFeature');
                const bstorageOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLEntranceBSNo'), 'CapsuleLayoutQS', 'Entrance Bar / Storage', 'csFeature');
                const customLOAOptionAndQs =await fieldValueWithoutC1C2($w('#updateCapsuleLCustomLANo'), 'CapsuleLayoutQS', 'Custom Layout Available', 'csFeature');
                const balconyOptionAndQs = await fieldValueWithoutC1C2($w('#updateCapsuleLBalconyNo'), 'CapsuleLayoutQS', 'Balcony', 'csFeature');
                const singleMultiLevelval= $w('#updateCapsuleLSingleMLC1').value
               
                let singleMultiLevelScore 
                try {
                    // Call the async function to get the score
                    singleMultiLevelScore = await getScoreFromDataCollection(singleMultiLevelval, 'CapsuleLayoutQS', 'Single/Multi Level: ');
                    
                    // Now the 'score' variable is assigned and can be used within this block
                    console.log("Score: ", singleMultiLevelScore);
                    
                    // You can use the 'score' variable in other logic here
                } catch (error) {
                    console.error("Error fetching score: ", error);
                }
                const totalscore = (sbaOptionAndQs.score + bathroomOptionAndQs.score + kitchenOptionAndQs.score + buitlinWOptionAndQs.score+
                bstorageOptionAndQs.score+customLOAOptionAndQs.score+balconyOptionAndQs.score+singleMultiLevelScore)

                const modelName = $w('#updateMainCIModelC1').value
                const brandName = $w('#updateMainCIBrandC1').value
                savedBrand = brandName;
                savedModel = modelName


                wixData.get('SpaceCapsuleFeatures', productID)
                            
                            .then(async(record) => {       
                                                 

                                // Update only the fields you want to change
                                record.separatedBedroomArea = sbaOptionAndQs.choice
                                record.separatedBedroomAreaQualityScore  = sbaOptionAndQs.score
                                record.bathroom = bathroomOptionAndQs.choice
                                record.bathroomQualityScore  = bathroomOptionAndQs.score
                                record.kitchen = kitchenOptionAndQs.choice
                                record.kitchenQualityScore  = kitchenOptionAndQs.score
                                record.builtinWardrobes1 = buitlinWOptionAndQs.choice
                                record.builtinWardrobesQualityScore  = buitlinWOptionAndQs.score
                                record.barStorage = bstorageOptionAndQs.choice
                                record.entranceBarStorage  = bstorageOptionAndQs.score
                                record.customLayoutAvailable = customLOAOptionAndQs.choice
                                record.customLayoutAvailable1  = customLOAOptionAndQs.score
                                record.balcony = balconyOptionAndQs.choice
                                record.balcony1  = balconyOptionAndQs.score
                                record.singleMultiLevel = singleMultiLevelval
                                record.singleMultilevelQualityScore  = singleMultiLevelScore
                                const prevTotalQS = record.totalCapsuleLayoutQualityScore
                           
                                record.totalCapsuleLayoutQualityScore = totalscore
                                
                                record.totalQualityScore = record.totalQualityScore + totalscore - prevTotalQS
                               
                                

                                // Save the updated record
                                return wixData.update('SpaceCapsuleFeatures', record);
                            })
                            .then((updatedRecord) => {
                                $w('#loader').hide();
                                showBoxSuccessMessage('Capsule Layout Information Saved Successfully')
                                $w('#submitCapsuleLayout').enable()
                            })
                            .catch((error) => {
                                console.error("Error updating record:", error);
                                showBoxErrorMessage(error.errorDescription);
                               $w('#loader').hide();
                               $w('#submitCapsuleLayout').enable()
                            });

                 
                }

            } 

            async function submitMainInfo(params) {
                $w('#submitMainInfo').disable();
                $w('#mainInfoError').hide();
                $w('#loader').show();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#submitMainInfo').enable();
                    return;
                } else {
                wixData.get('SpaceCapsuleFeatures', productID)
                                    .then((record) => {
                                        // Update only the fields you want to change
                                        record.name = $w('#updateMainCIBrandC1').value;
                                        record.model = $w('#updateMainCIModelC1').value;
                                        record.recommendedRetailPrice = parseInt($w('#updateMainCIRetailPC1').value);
                                        record.length = parseFloat($w('#updateMainCILengthC1').value);
                                        record.widthM = parseFloat($w('#updateMainCIWidthC1').value);
                                        record.heightM = parseFloat($w('#updateMainCIHeightC1').value);
                                        record.floorAreaM2 = parseFloat($w('#updateMainCIFloorAC1').value);
                                        record.weightTon = parseFloat($w('#updateMainCIWeightC1').value);
                                        record.structuralDelivery = $w('#mainCIStructuralDTC1').value;
                                        record.capsuleType = getCapsuleType();
                                        record.category1 = getCapsuleCategory($w('#updateMainCILengthC1').value)                                     
                                       
                                        return wixData.update('SpaceCapsuleFeatures', record);
                                    })
                                    .then((updatedRecord) => {
                                        // console.log("Record updated successfully:", updatedRecord);
                                        $w('#loader').hide();
                                        showBoxSuccessMessage('Capsule Main Information Updated Successfully')
                                        $w('#submitMainInfo').enable()
                                    })
                                    .catch((error) => {
                                        console.error("Error updating record:", error);
                                        showBoxErrorMessage(error.errorDescription);
                                        $w('#loader').hide();
                                        $w('#submitMainInfo').enable()
                                    });                               

                            
                    } 
                                      

            }

            async function saveMainImage(params) {              
            
                $w('#loader').show();
                $w('#saveMainImage').disable();
                const isformValid = await validateForm();
                if (!isformValid) {
                    $w('#saveMainImage').enable();
                    return;
                } 

                else {  
                        const modelName = $w('#updateMainCIModelC1').value
                        const brandName = $w('#updateMainCIBrandC1').value
                        savedBrand = brandName;
                        savedModel = modelName;
                        let newName = generateNewImageName('main-image');
                        if ($w('#uploadMainImage').value.length > 0) {
                                $w('#uploadMainImage').uploadFiles()
                                    .then(async (uploadedFile) => {
                                        let imageURL = uploadedFile[0].fileUrl
                                        $w('#mainCapsuleImage').src = uploadedFile[0].fileUrl
                                        $w('#mainCapsuleImage').show()
                                        let id = uploadedFile[0].fileName // here fileName is actually fileID as required and explained in the docs
                                        let newFileName = newName
                                        let fileUpdates = {
                                            displayName: newFileName,
                                            label: ['banner', 'spaceCapsules', 'model-Image'],
                                            
                                        }
                                        // uploadFileToMedia(id, newFileName); // this is the method I tried by making an API request importing it from 'backend/getAPIKEY.jsw'
                                        const updatedLocation = await myUpdateFileDescriptorFunction(id, fileUpdates);
                                        console.log(
                                            "Display name successfully updated to:",
                                            updatedLocation.displayName,

                                        );
                                        wixData.get('SpaceCapsuleFeatures', productID)
                                            .then((record) => {
                                                record.image = imageURL;
                                                return wixData.update('SpaceCapsuleFeatures', record);
                                            })
                                            .then((updatedRecord) => {
                                                console.log(updatedRecord.image)
                                                console.log(updatedRecord)
                                                $w('#loader').hide();
                                                showBoxSuccessMessage('Main Capsule Image Saved Successfully')
                                                $w('#saveMainImage').enable();
                                            })
                                            .catch((error) => {
                                                // console.error("Error updating record:", error);
                                                showBoxErrorMessage(error.errorDesciption);
                                                $w('#loader').hide();
                                                $w('#saveMainImage').enable(); 
                                            });

                                    })
                            } else {
                                showBoxErrorMessage("You have not selected a file for upload, Please select a file first then click save button")
                            }

                    
                } 
            }


            async function fieldValueWithoutC1C2(fieldIDofNoElement, qstable, value, qsfeature) {
                let mainString = fieldIDofNoElement.id;
                let diffString = 'No'
                let stringTosearch = extractBeforeSubstring(mainString, diffString);
                let yesElement = $w(`#${stringTosearch}Yes`)
                let fIDOptional = value + "Optional"
                let opElement = $w(`#${stringTosearch}Op`)
                if (fieldIDofNoElement.checked) {
                    return { choice: 'No', score: 0 }
                } else if (yesElement.checked) {
                  try {
                    const result = await wixData.query(qstable)
                        .eq(qsfeature, value)
                        .find();
                    if (result.items.length > 0)
                            {
                               
                                return { choice: 'Yes', score: result.items[0].score }

                            } else {
                                console.log("No quality score found")
                            }
                     } 
                     catch (error) {
                            console.error("Error querying the data collection: ", error);
                            throw error;
                       }                          
                    

                } else if (opElement.checked) {
                    value = value + ' '+ 'Optional'
                    try {
                    const result = await wixData.query(qstable)
                        .eq('csFeature', value)
                        .find();
                    if (result.items.length > 0)
                            {
                                console.log({ choice: 'Optional', score: result.items[0].score})
                                return { choice: 'Optional', score: result.items[0].score }

                            } else {
                                console.log("No quality score found")
                            }
                     } 
                     catch (error) {
                            console.error("Error querying the data collection: ", error);
                            throw error;
                       }
                }
            }
            
            function getSelectValnQS(element, tableID, fieldID) {
                let selectedValue = element.value
                let fID = fieldID + selectedValue.toLowerCase()
                return wixData.query(tableID)
                    .find()
                    .then((results) => {
                        if (results.items.length > 0) {
                            results.items.map((item) => {

                                if (item === fID) {
                                    return { choice: selectedValue, score: fID }
                                }

                            })
                        } else {
                            return {choice : '', score: 0}
                        }
                    })
                
            }

            async function getScoreFromDataCollection1(element, collectionName, value, fieldID) {
                    const elementValue = element.value
                    const valeFieldID = getQSFieldID(elementValue)
                try {
                    const result = await wixData.query(collectionName)
                        .eq(fieldID, value)  // Replace 'qualityType' with the actual field name
                        .find();                    
                        if (result.items.length > 0) {
                            // Assuming 'score' is the field storing the value
                            return result.items[0][valeFieldID];
                        } else {
                            return null;  // Handle no results case
                        }
                } catch (error) {
                    console.error("Error querying the data collection: ", error);
                    throw error;
                }
            }

            async function fieldValueWithC1C2(fieldIDofNoElement, qstable, value, qsfeature) {
                let mainString = fieldIDofNoElement.id;
                let diffString = 'No'
                let stringTosearch = extractBeforeSubstring(mainString, diffString);
                let yesElement = $w(`#${stringTosearch}Yes`)
                let c1Element = $w(`#${stringTosearch}C1`)
                let elementValue = c1Element.value
                let fieldValue
                if(value === 'Other'){
                    fieldValue = 'other'

                } else {

                    fieldValue = getQSFieldID(elementValue)
                }

                console.log("fieldValue: ", fieldValue)
                if (fieldIDofNoElement.checked) {
                    console.log({choice : 'No', score : 0})
                    return {choice : 'No', score : 0}
                } else if (yesElement.checked) {
                     try {
                    const result = await wixData.query(qstable)
                        .eq(qsfeature, value)
                        .find();
                    if (result.items.length > 0)
                            {
                                console.log ({ choice: elementValue, score: result.items[0][fieldValue]})
                                return { choice: elementValue, score: result.items[0][fieldValue]}

                            } else {
                                console.log("No quality score found")
                            }
                     } 
                     catch (error) {
                            console.error("Error querying the data collection: ", error);
                            throw error;
                       }   
                }

            }

            async function fieldValueWithC1C2fortextinput(fieldIDofNoElement, qstable, value, qsfeature) {
                let mainString = fieldIDofNoElement.id;
                let diffString = 'No'
                let stringTosearch = extractBeforeSubstring(mainString, diffString);
                let yesElement = $w(`#${stringTosearch}Yes`)
                let c1Element = $w(`#${stringTosearch}C1`)
                let elementValue = c1Element.value
                let fieldValue
                if(value === 'Other'){
                    fieldValue = 'other'

                } else {

                    fieldValue ='score'
                }

                console.log("fieldValue: ", fieldValue)
                if (fieldIDofNoElement.checked) {
                    console.log({choice : 'No', score : 0})
                    return {choice : 'No', score : 0}
                } else if (yesElement.checked) {
                     try {
                    const result = await wixData.query(qstable)
                        .eq(qsfeature, value)
                        .find();
                    if (result.items.length > 0)
                            {
                                console.log ({ choice: elementValue, score: result.items[0][fieldValue]})
                                return { choice: elementValue, score: result.items[0][fieldValue]}

                            } else {
                                console.log("No quality score found")
                            }
                     } 
                     catch (error) {
                            console.error("Error querying the data collection: ", error);
                            throw error;
                       }   
                }

            }
            function getQSFieldID(str) {
              // Remove '&', ':', '(', ')', and '/' from the string
                str = str.replace(/[&:()/]/g, "");

                // Split the string into an array of words using space or hyphen as the delimiter
                let words = str.split(/[\s-]+/);

                // Lowercase the first word
                words[0] = words[0].toLowerCase();

                // Process subsequent words
                for (let i = 1; i < words.length; i++) {
                    // Check if the word starts with a digit
                    if (/^\d/.test(words[i])) {
                        // If it starts with a digit, leave it as is (keep original casing)
                        continue;
                    } else {
                        // Capitalize the first letter of the word, make the rest lowercase
                        words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1).toLowerCase();
                    }
                }

                // Join all the words back together without spaces or hyphens
                let formattedString = words.join("");

                return formattedString;
            }            
            async function fieldValueWithC1C2C3(fieldIDofNoElement, qstable, value, qsfeature) {
                let mainString = fieldIDofNoElement.id;
                let diffString = 'No'
                let stringTosearch = extractBeforeSubstring(mainString, diffString);
                let yesElement = $w(`#${stringTosearch}Yes`)
                let c2Element = $w(`#${stringTosearch}C2`)
                let elementValue = c2Element.value
                let fieldValue
                if(value === 'Other'){
                    fieldValue = 'other'

                } else {

                    fieldValue ='score'
                }

               if (fieldIDofNoElement.checked) {
                    console.log({choice : 'No', score : 0})
                    return {choice : 'No', score : 0}
                } else if (yesElement.checked) {
                     try {
                    const result = await wixData.query(qstable)
                        .eq(qsfeature, value)
                        .find();
                    if (result.items.length > 0)
                            {
                                console.log ({ choice: elementValue, score: result.items[0][fieldValue]})
                                return { choice: elementValue, score: result.items[0][fieldValue]}

                            } else {
                                console.log("No quality score found")
                            }
                     } 
                     catch (error) {
                            console.error("Error querying the data collection: ", error);
                            throw error;
                       }   
                }

            }

            async function getScoreFromDataCollection(selectedValue, collectionName, common) {
                    let value = common + selectedValue
                try {
                    const result = await wixData.query(collectionName)
                        .eq('csFeature', value)  // Replace 'qualityType' with the actual field name
                        .find();                    
                        if (result.items.length > 0) {
                            // Assuming 'score' is the field storing the value
                            return result.items[0].score;
                        } else {
                            return null;  // Handle no results case
                        }
                } catch (error) {
                    console.error("Error querying the data collection: ", error);
                    throw error;
                }
            }
            async function getScoreFromDataCollection1(element, collectionName, value, fieldID) {
                    const elementValue = element.value
                    const valeFieldID = getQSFieldID(elementValue)
                try {
                    const result = await wixData.query(collectionName)
                        .eq(fieldID, value)  // Replace 'qualityType' with the actual field name
                        .find();                    
                        if (result.items.length > 0) {
                            // Assuming 'score' is the field storing the value
                            return result.items[0][valeFieldID];
                        } else {
                            return null;  // Handle no results case
                        }
                } catch (error) {
                    console.error("Error querying the data collection: ", error);
                    throw error;
                }
            }

            function getCapsuleType(params) {

                if ($w('#updateMainCICapsuleTSpaceC').checked) {

                    let capsuleType = $w('#updateMainCICapsuleTSpaceC').value
                    return capsuleType

                } else if ($w('#updateMainCICapsuleTAppleC').checked) {

                    let capsuleType = $w('#updateMainCICapsuleTAppleC').value
                    return capsuleType
                }

            }
            async function getImageUrl(array, idtomatch) {
                var fieldurl = ''
                console.log("array", array)
                await array.forEach((item, index) => {
                    if (item.element.id === idtomatch) {
                        console.log(item);
                        console.log("geturl");
                        fieldurl = item.url
                        console.log(item.url)
                        console.log(item.url)
                    }
                })

                return fieldurl;

            }

            function getCapsuleCategory(length) {
                if(length <=6){
                    return "Small Capsules"
                } else if(length > 6 && length <= 8.5){
                    return "Medium Capsules"
                }  else if(length > 8.5 ){
                    return "Large Capsules"
                }
            }
           
        })
        .catch((error) => {
            console.error(error);
        });

})

$w('#saveandexit').onClick((event) => {
    wixlocation.to('/manufacturer-dashboard')    
})